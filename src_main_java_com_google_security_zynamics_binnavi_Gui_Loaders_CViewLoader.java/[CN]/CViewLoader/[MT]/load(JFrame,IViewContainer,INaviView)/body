{
  Preconditions.checkNotNull(parent,"IE00011: Parent argument can not be null");
  Preconditions.checkNotNull(container,"IE00012: Container argument can not be null");
  Preconditions.checkNotNull(view,"IE00013: View argument can not be null");
  if (view.isLoaded()) {
    return;
  }
  final ViewLoaderThread thread=new ViewLoaderThread(view);
  CProgressDialog.showEndless(parent,String.format("Loading view '%s'",view.getName()),thread);
  final Exception exception=thread.getException();
  if (exception != null) {
    if (exception instanceof CouldntLoadDataException) {
      CUtilityFunctions.logException(exception);
      final String message="E00050: Could not load view";
      final String description=CUtilityFunctions.createDescription(String.format("The view '%s' could not be loaded.",view.getName()),new String[]{"There were problems with the database connection.","Malformed data was found in the database."},new String[]{"The view was not loaded."});
      NaviErrorDialog.show(parent,message,description,exception);
    }
 else     if (exception instanceof CPartialLoadException) {
      CUtilityFunctions.logException(exception);
      final String moduleName=((CPartialLoadException)exception).getModule().getConfiguration().getName();
      final String message="E00051: Could not load view";
      final String description=CUtilityFunctions.createDescription(String.format("The view '%s' could not be loaded because it " + "depends on the unloaded module '%s'.",view.getName(),moduleName),new String[]{String.format("Module '%s' is not loaded.",moduleName)},new String[]{String.format("The view can not be loaded before the module '%s' is loaded.",moduleName)});
      NaviErrorDialog.show(parent,message,description,exception);
    }
  }
}
