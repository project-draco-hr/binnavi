{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0).getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String memoryRegister2=(registerOperand3.getValue());
  final OperandSize dw=OperandSize.DWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String negRotVal2=environment.getNextVariableString();
  final String rotVal1=environment.getNextVariableString();
  final String rotVal2=environment.getNextVariableString();
  final String tmpResult=environment.getNextVariableString();
  final String tmpRotate1=environment.getNextVariableString();
  final String tmpRotate2=environment.getNextVariableString();
  final String tmpVal1=environment.getNextVariableString();
  instructions.add(ReilHelpers.createLdm(baseOffset++,dw,memoryRegister2,dw,tmpVal1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,memoryRegister2,dw,String.valueOf(0x3),dw,rotVal1));
  instructions.add(ReilHelpers.createMul(baseOffset++,dw,rotVal1,dw,String.valueOf(8),dw,rotVal2));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,String.valueOf(0),dw,rotVal2,dw,negRotVal2));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVal1,dw,negRotVal2,dw,tmpRotate1));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVal1,dw,rotVal2,dw,tmpRotate2));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,tmpRotate1,dw,tmpRotate2,dw,tmpResult));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpResult,dw,String.valueOf(0xFFFFFFFFL),dw,targetRegister));
  instructions.add(ReilHelpers.createStm(baseOffset++,dw,sourceRegister1,dw,memoryRegister2));
}
