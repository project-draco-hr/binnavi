{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().size() == 3 ? instruction.getOperands().get(2).getRootNode().getChildren().get(0) : null;
  final String sourceRegister1=(registerOperand1.getValue());
  final String sourceRegister2=(registerOperand2.getValue());
  final String sourceImmediate=instruction.getOperands().size() == 3 ? (registerOperand3.getValue()) : null;
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  Pair<String,String> result=null;
  if (instruction.getOperands().size() == 3) {
    if (instruction.getMnemonic().endsWith(".W")) {
      result=AddressingModeOneGenerator.lsrRegister(baseOffset,environment,instructions,sourceRegister2,sourceImmediate);
    }
 else {
      result=AddressingModeOneGenerator.lsrImmediate(baseOffset,environment,instructions,sourceRegister2,sourceImmediate);
    }
  }
 else   if (instruction.getOperands().size() == 2) {
    result=AddressingModeOneGenerator.lsrRegister(baseOffset,environment,instructions,sourceRegister1,sourceRegister2);
  }
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  instructions.add(ReilHelpers.createAnd(baseOffset++,OperandSize.DWORD,result.first(),OperandSize.DWORD,String.valueOf(0xFFFFFFFFL),OperandSize.DWORD,sourceRegister1));
  if (instruction.getMnemonic().contains("LSRS")) {
    ARMFlagSettingHelper.setThumbRotateFlags(instructions,baseOffset,OperandSize.BYTE,result.second(),OperandSize.DWORD,result.first());
  }
}
