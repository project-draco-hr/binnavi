{
  interpreter.setRegister("eax",BigInteger.valueOf(0x12345678),OperandSize.DWORD,ReilRegisterStatus.DEFINED);
  final MockOperandTree operandTree1=new MockOperandTree();
  operandTree1.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"dword");
  operandTree1.root.m_children.add(new MockOperandTreeNode(ExpressionType.IMMEDIATE_INTEGER,"eax"));
  final List<MockOperandTree> operands=Lists.newArrayList(operandTree1);
  final MockInstruction instruction=new MockInstruction("bswap",operands);
  translator.translate(environment,instruction,instructions);
  interpreter.interpret(TestHelpers.createMapping(instructions),BigInteger.valueOf(0x100));
  assertEquals(2,TestHelpers.filterNativeRegisters(interpreter.getDefinedRegisters()).size());
  assertEquals(BigInteger.valueOf(0x78563412),interpreter.getVariableValue("eax"));
  assertEquals(BigInteger.ZERO,BigInteger.valueOf(interpreter.getMemorySize()));
}
