{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String sourceRegister2=(registerOperand3.getValue());
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String tmpVar1=environment.getNextVariableString();
  final String value=environment.getNextVariableString();
  Helpers.signedMul(baseOffset,environment,instruction,instructions,dw,sourceRegister1,dw,sourceRegister2,qw,value);
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  if (instruction.getMnemonic().contains("R")) {
    instructions.add(ReilHelpers.createAdd(baseOffset++,qw,value,dw,String.valueOf(0x80000000L),dw,value));
  }
  instructions.add(ReilHelpers.createBsh(baseOffset++,qw,value,wd,String.valueOf(-32L),dw,tmpVar1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpVar1,dw,String.valueOf(0xFFFFFFFFL),dw,targetRegister));
}
