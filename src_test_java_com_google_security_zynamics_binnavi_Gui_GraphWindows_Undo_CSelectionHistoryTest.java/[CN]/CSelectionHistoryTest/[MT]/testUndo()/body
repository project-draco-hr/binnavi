{
  ConfigManager.instance().read();
  final ZyGraph graph=CGraphBuilder.buildGraph(new MockView());
  final CSelectionHistory history=new CSelectionHistory(graph,4);
  final CSelectionSnapshot snapshot1=new CSelectionSnapshot(new ArrayList<NaviNode>());
  final CSelectionSnapshot snapshot2=new CSelectionSnapshot(new ArrayList<NaviNode>());
  final CSelectionSnapshot snapshot3=new CSelectionSnapshot(new ArrayList<NaviNode>());
  final CSelectionSnapshot snapshot4=new CSelectionSnapshot(new ArrayList<NaviNode>());
  history.addSnapshot(snapshot1);
  history.addSnapshot(snapshot2);
  history.addSnapshot(snapshot3);
  history.addSnapshot(snapshot4);
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot3,history.getUndoSnapshot(true));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot2,history.getUndoSnapshot(true));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot1,history.getUndoSnapshot(true));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot1,history.getUndoSnapshot(true));
  assertEquals(snapshot2,history.getUndoSnapshot(false));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot3,history.getUndoSnapshot(false));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot4,history.getUndoSnapshot(false));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
  assertEquals(snapshot4,history.getUndoSnapshot(false));
  assertEquals(snapshot3,history.getUndoSnapshot(true));
  assertTrue(history.canUndo());
  assertTrue(history.canRedo());
}
