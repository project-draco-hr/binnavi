{
  final ReilOperand inputOperand=instruction.getFirstOperand();
  final ReilOperand addressOperand=instruction.getThirdOperand();
  final OperandType inputOperandType=inputOperand.getType();
  if (inputOperandType == OperandType.INTEGER_LITERAL) {
    final IValueElement previousAddressState=state.getState(addressOperand.getValue());
    final IValueElement outputValue=getValue(inputOperand,previousAddressState);
    if ((previousAddressState == null) || (previousAddressState instanceof Undefined)) {
      final IValueElement newThirdState=getAtomicType(addressOperand);
      return state.update(instruction,new MemoryCell(newThirdState),outputValue);
    }
 else {
      final IValueElement previousState2b=state.getState(new MemoryCell(previousAddressState));
      if ((previousState2b == null) || (previousState2b instanceof Undefined)) {
        return state.update(instruction,new MemoryCell(previousAddressState),outputValue);
      }
 else {
        return state.update(instruction,new MemoryCell(previousState2b),outputValue);
      }
    }
  }
 else   if (inputOperandType == OperandType.REGISTER) {
    final IValueElement newThirdState=getAtomicType(addressOperand);
    final IValueElement previousStateInput=state.getState(inputOperand.getValue());
    final IValueElement previousState2=getOperandValue(addressOperand,state);
    if ((previousStateInput == null) && (previousState2 == null)) {
      return state.update(instruction,new MemoryCell(newThirdState),getAtomicType(inputOperand));
    }
 else     if ((previousStateInput == null) && (previousState2 != null)) {
      final IValueElement previousState2b=state.getState(new MemoryCell(previousState2));
      if (previousState2b == null) {
        return state.update(instruction,new MemoryCell(previousState2),getAtomicType(inputOperand));
      }
 else {
        return state.update(instruction,new MemoryCell(previousState2b),getAtomicType(inputOperand));
      }
    }
 else     if ((previousStateInput != null) && (previousState2 == null)) {
      return state.update(instruction,new MemoryCell(newThirdState),previousStateInput);
    }
 else     if (previousState2 instanceof Undefined) {
      return state.update(instruction,new MemoryCell(newThirdState),new Undefined());
    }
 else {
      final IValueElement previousState2b=state.getState(new MemoryCell(previousState2));
      if ((previousState2b == null) || (previousState2b instanceof Undefined)) {
        return state.update(instruction,new MemoryCell(previousState2),previousStateInput);
      }
 else {
        return state.update(instruction,new MemoryCell(previousState2b),previousStateInput);
      }
    }
  }
  throw new IllegalStateException("Not yet implemented");
}
