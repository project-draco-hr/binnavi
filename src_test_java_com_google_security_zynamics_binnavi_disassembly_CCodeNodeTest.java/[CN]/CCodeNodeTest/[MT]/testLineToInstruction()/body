{
  final MockSqlProvider provider=new MockSqlProvider();
  final CModule internalModule=new CModule(1,"","",new Date(),new Date(),CommonTestObjects.MD5,CommonTestObjects.SHA1,0,0,new CAddress(0),new CAddress(0),null,null,Integer.MAX_VALUE,false,provider);
  final CFunction parentFunction=new CFunction(internalModule,new MockView(),new CAddress(0x123),"Mock Function","Mock Function","Mock Description",0,0,0,0,FunctionType.NORMAL,"",0,null,null,null,provider);
  final CCodeNode node=new CCodeNode(1,0,0,0,0,Color.BLACK,Color.BLACK,false,true,null,parentFunction,new LinkedHashSet<CTag>(),new MockSqlProvider());
  final MockInstruction i1=new MockInstruction(new CAddress(0x123),"nop",new ArrayList<COperandTree>(),null);
  final MockInstruction i2=new MockInstruction(new CAddress(0x124),"nop",new ArrayList<COperandTree>(),null);
  final MockInstruction i3=new MockInstruction(new CAddress(0x125),"nop",new ArrayList<COperandTree>(),null);
  final MockInstruction i4=new MockInstruction(new CAddress(0x126),"nop",new ArrayList<COperandTree>(),m_globalComment);
  final MockInstruction i5=new MockInstruction(new CAddress(0x127),"nop",new ArrayList<COperandTree>(),null);
  node.addInstruction(i1,Lists.<IComment>newArrayList(new CComment(null,CommonTestObjects.TEST_USER_1,null,"Foo\nBar")));
  node.addInstruction(i2,Lists.<IComment>newArrayList(new CComment(null,CommonTestObjects.TEST_USER_1,null,"\n")));
  node.addInstruction(i3,null);
  node.addInstruction(i4,null);
  node.addInstruction(i5,null);
  try {
    node.addInstruction(null,null);
    fail();
  }
 catch (  final NullPointerException e) {
  }
  assertEquals(null,CCodeNodeHelpers.lineToInstruction(node,0));
  assertEquals(i1,CCodeNodeHelpers.lineToInstruction(node,1));
  assertEquals(i1,CCodeNodeHelpers.lineToInstruction(node,2));
  assertEquals(i2,CCodeNodeHelpers.lineToInstruction(node,3));
  assertEquals(i2,CCodeNodeHelpers.lineToInstruction(node,4));
  assertEquals(i3,CCodeNodeHelpers.lineToInstruction(node,5));
  assertEquals(i5,CCodeNodeHelpers.lineToInstruction(node,9));
  assertEquals(null,CCodeNodeHelpers.lineToInstruction(node,10));
}
