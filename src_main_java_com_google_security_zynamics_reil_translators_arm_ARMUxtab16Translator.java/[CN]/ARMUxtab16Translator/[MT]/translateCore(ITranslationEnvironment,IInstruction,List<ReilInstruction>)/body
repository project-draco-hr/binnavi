{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode shifter=instruction.getOperands().get(2).getRootNode();
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister=(registerOperand2.getValue());
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String highResult=environment.getNextVariableString();
  final String lowResult=environment.getNextVariableString();
  final String operand2=environment.getNextVariableString();
  final String operand2from15to0=environment.getNextVariableString();
  final String operand2from31to16=environment.getNextVariableString();
  final String tmpHighResult=environment.getNextVariableString();
  final String tmpLowResult=environment.getNextVariableString();
  final String tmpRn15to0=environment.getNextVariableString();
  final String tmpRn31to16=environment.getNextVariableString();
  final Pair<String,String> shifterPair=AddressingModeOneGenerator.generate(baseOffset,environment,instruction,instructions,shifter);
  baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String shifterOperand=shifterPair.first();
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,shifterOperand,dw,String.valueOf(0x00FF00FFL),dw,operand2));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,operand2,dw,String.valueOf(0xFFFFL),dw,operand2from15to0));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,operand2,dw,String.valueOf(-16L),dw,operand2from31to16));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister,dw,String.valueOf(0xFFFFL),dw,tmpRn15to0));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,sourceRegister,dw,String.valueOf(-16L),dw,tmpRn31to16));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,operand2from15to0,dw,tmpRn15to0,dw,tmpLowResult));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpLowResult,dw,String.valueOf(0xFFFFL),dw,lowResult));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,operand2from31to16,dw,tmpRn31to16,dw,tmpHighResult));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpHighResult,dw,String.valueOf(0xFFFFL),dw,highResult));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,highResult,wd,String.valueOf(16L),dw,targetRegister));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,targetRegister,dw,lowResult,dw,targetRegister));
}
