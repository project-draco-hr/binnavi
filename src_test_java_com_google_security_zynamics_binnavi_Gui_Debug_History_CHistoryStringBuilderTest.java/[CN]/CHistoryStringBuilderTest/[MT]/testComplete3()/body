{
  final CHistoryStringBuilder builder=new CHistoryStringBuilder();
  builder.setDebugger(m_debugger);
  m_debugger.connect();
  m_synchronizer.receivedEvent(DebuggerMessageBuilder.buildProcessStartReply(mockMemoryModule));
  m_debugger.getProcessManager().setTargetInformation(new TargetInformation(5,Lists.newArrayList(new RegisterDescription("eax",4,true),new RegisterDescription("ebx",4,false)),new DebuggerOptions(false,false,false,false,false,false,false,false,false,false,12,0,new ArrayList<DebuggerException>(),false,false,false)));
  m_debugger.getProcessManager().addThread(new TargetProcessThread(1,ThreadState.RUNNING));
  m_synchronizer.receivedEvent(new BreakpointConditionSetReply(0,0));
  m_synchronizer.receivedEvent(new BreakpointConditionSetReply(0,1));
  m_synchronizer.receivedEvent(new EchoBreakpointHitReply(0,0,1,new RegisterValues(Lists.<ThreadRegisters>newArrayList(new ThreadRegisters(1,Lists.newArrayList(new RegisterValue("eip",BigInteger.ONE,new byte[0],false,false)))))));
  m_synchronizer.receivedEvent(new EchoBreakpointHitReply(0,0,1,new RegisterValues(Lists.<ThreadRegisters>newArrayList(new ThreadRegisters(1,Lists.newArrayList(new RegisterValue("eip",BigInteger.ONE,new byte[0],true,false)))))));
  m_debugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  m_debugger.getProcessManager().getThread(0).setCurrentAddress(new RelocatedAddress(new CAddress(0)));
  m_debugger.getBreakpointManager().addBreakpoints(BreakpointType.ECHO,BREAKPOINT_ADDRESS);
  m_synchronizer.receivedEvent(new EchoBreakpointSetReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,0))));
  m_synchronizer.receivedEvent(new EchoBreakpointSetReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,1))));
  m_synchronizer.receivedEvent(new EchoBreakpointsRemovedReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,0))));
  m_synchronizer.receivedEvent(new EchoBreakpointsRemovedReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,1))));
  m_synchronizer.receivedEvent(new ExceptionOccurredReply(0,0,0,0,new RelocatedAddress(new CAddress(0)),"Test exception"));
  m_synchronizer.receivedEvent(new HaltReply(0,0,0));
  m_synchronizer.receivedEvent(new HaltReply(0,0,1));
  m_synchronizer.receivedEvent(new ListFilesReply(0,0,RemoteFileSystem.parse("<foo></foo>".getBytes())));
  m_synchronizer.receivedEvent(new ListFilesReply(0,1,null));
  m_synchronizer.receivedEvent(new ListProcessesReply(0,0,ProcessList.parse("<foo></foo>".getBytes())));
  m_synchronizer.receivedEvent(new ListProcessesReply(0,1,null));
  m_synchronizer.receivedEvent(new MemoryMapReply(0,0,new MemoryMap(new ArrayList<MemorySection>())));
  m_synchronizer.receivedEvent(new MemoryMapReply(0,1,null));
  m_synchronizer.receivedEvent(new ModuleLoadedReply(0,0,new MemoryModule("XXX","YYYXXX",new RelocatedAddress(new CAddress(0)),0),new TargetProcessThread(123,ThreadState.SUSPENDED)));
  m_synchronizer.receivedEvent(new ModuleUnloadedReply(0,0,new MemoryModule("XXX","YYYXXX",new RelocatedAddress(new CAddress(0)),0)));
  m_synchronizer.receivedEvent(new ProcessClosedReply(0,0));
  m_synchronizer.receivedEvent(new ReadMemoryReply(0,0,new CAddress(0),new byte[8]));
  m_synchronizer.receivedEvent(new ReadMemoryReply(0,1,null,null));
  m_synchronizer.receivedEvent(new RegistersReply(0,0,new RegisterValues(new FilledList<ThreadRegisters>())));
  m_synchronizer.receivedEvent(new RegistersReply(0,1,null));
  m_synchronizer.receivedEvent(new RequestTargetReply(0,0));
  m_synchronizer.receivedEvent(new RequestTargetReply(0,1));
  m_synchronizer.receivedEvent(new ResumeReply(0,0));
  m_synchronizer.receivedEvent(new ResumeReply(0,1));
  m_debugger.connect();
  m_debugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  m_debugger.getProcessManager().getThread(0).setCurrentAddress(new RelocatedAddress(new CAddress(0)));
  m_synchronizer.receivedEvent(new ResumeThreadReply(0,0,0));
  m_synchronizer.receivedEvent(new ResumeThreadReply(0,1,0));
  m_synchronizer.receivedEvent(new SearchReply(0,0,new CAddress(0)));
  m_synchronizer.receivedEvent(new SearchReply(0,1,null));
  m_synchronizer.receivedEvent(new SelectFileReply(0,0));
  m_synchronizer.receivedEvent(new SelectFileReply(0,1));
  m_debugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  m_debugger.getProcessManager().getThread(0).setCurrentAddress(new RelocatedAddress(new CAddress(0)));
  m_synchronizer.receivedEvent(new SetRegisterReply(0,0,0,0));
  m_synchronizer.receivedEvent(new SetRegisterReply(0,1,0,0));
  m_synchronizer.receivedEvent(new SingleStepReply(0,0,0,new RelocatedAddress(new CAddress(0)),new RegisterValues(new FilledList<ThreadRegisters>())));
  m_synchronizer.receivedEvent(new SingleStepReply(0,1,0,new RelocatedAddress(new CAddress(0)),new RegisterValues(new FilledList<ThreadRegisters>())));
  m_synchronizer.receivedEvent(new StepBreakpointHitReply(0,0,1,new RegisterValues(Lists.<ThreadRegisters>newArrayList(new ThreadRegisters(1,Lists.newArrayList(new RegisterValue("eip",BigInteger.ONE,new byte[0],false,false)))))));
  m_synchronizer.receivedEvent(new StepBreakpointHitReply(0,0,1,new RegisterValues(Lists.<ThreadRegisters>newArrayList(new ThreadRegisters(1,Lists.newArrayList(new RegisterValue("eip",BigInteger.ONE,new byte[0],true,false)))))));
  m_debugger.getBreakpointManager().addBreakpoints(BreakpointType.STEP,BREAKPOINT_ADDRESS);
  m_synchronizer.receivedEvent(new StepBreakpointSetReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,0))));
  m_synchronizer.receivedEvent(new StepBreakpointSetReply(0,1,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,1))));
  m_synchronizer.receivedEvent(new StepBreakpointsRemovedReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,0))));
  m_synchronizer.receivedEvent(new StepBreakpointsRemovedReply(0,1,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(BREAKPOINT_ADDRESS_RELOC,1))));
  m_synchronizer.receivedEvent(new SuspendThreadReply(0,0,0));
  m_synchronizer.receivedEvent(new SuspendThreadReply(0,1,0));
  m_synchronizer.receivedEvent(new TargetInformationReply(0,0,TargetInformationParser.parse("<foo><size>32</size><registers></registers><options></options></foo>".getBytes())));
  m_synchronizer.receivedEvent(new TargetInformationReply(0,1,null));
  m_debugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  m_synchronizer.receivedEvent(new ThreadClosedReply(0,0,0));
  m_synchronizer.receivedEvent(new ThreadClosedReply(0,1,0));
  m_synchronizer.receivedEvent(new ThreadCreatedReply(0,0,0,ThreadState.RUNNING));
  m_synchronizer.receivedEvent(new ThreadCreatedReply(0,1,0,null));
  m_synchronizer.receivedEvent(new ValidateMemoryReply(0,0,new CAddress(0),new CAddress(0)));
  m_synchronizer.receivedEvent(new ValidateMemoryReply(0,1,null,null));
  m_synchronizer.receivedEvent(new WriteMemoryReply(0,0));
  m_synchronizer.receivedEvent(new WriteMemoryReply(0,1));
  m_synchronizer.receivedEvent(new TerminateReply(0,0));
  m_synchronizer.receivedEvent(new TerminateReply(0,1));
}
