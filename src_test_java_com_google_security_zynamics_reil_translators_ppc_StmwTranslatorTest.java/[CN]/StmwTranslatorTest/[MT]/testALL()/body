{
  interpreter.setRegister("%r1",BigInteger.valueOf(996),OperandSize.DWORD,ReilRegisterStatus.DEFINED);
  final MockOperandTree operandTree1=new MockOperandTree();
  operandTree1.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"byte");
  operandTree1.root.m_children.add(new MockOperandTreeNode(ExpressionType.REGISTER,"%r2"));
  final MockOperandTree operandTree2=new MockOperandTree();
  operandTree2.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"dword");
  operandTree2.root.m_children.add(new MockOperandTreeNode(ExpressionType.MEMDEREF,"["));
  operandTree2.root.m_children.get(0).m_children.add(new MockOperandTreeNode(ExpressionType.OPERATOR,"+"));
  operandTree2.root.m_children.get(0).getChildren().get(0).getChildren().add(new MockOperandTreeNode(ExpressionType.REGISTER,"%r1"));
  operandTree2.root.m_children.get(0).getChildren().get(0).getChildren().add(new MockOperandTreeNode(ExpressionType.IMMEDIATE_INTEGER,"4"));
  final List<MockOperandTree> operands=Lists.newArrayList(operandTree1,operandTree2);
  final IInstruction instruction=new MockInstruction("stmw",operands);
  translator.translate(environment,instruction,instructions);
  interpreter.interpret(TestHelpers.createMapping(instructions),BigInteger.valueOf(0x100L));
  assertEquals(BigInteger.valueOf(996),interpreter.getVariableValue("%r1"));
  assertEquals(BigInteger.valueOf(0x11111111),BigInteger.valueOf(interpreter.readMemoryDword(1000)));
  assertEquals(BigInteger.valueOf(0x22222222),BigInteger.valueOf(interpreter.readMemoryDword(1004)));
  assertEquals(BigInteger.valueOf(0x33333333),BigInteger.valueOf(interpreter.readMemoryDword(1008)));
  assertEquals(BigInteger.valueOf(0x44444444),BigInteger.valueOf(interpreter.readMemoryDword(1012)));
  assertEquals(BigInteger.valueOf(0x55555555),BigInteger.valueOf(interpreter.readMemoryDword(1016)));
  assertEquals(BigInteger.valueOf(0x66666666),BigInteger.valueOf(interpreter.readMemoryDword(1020)));
  assertEquals(BigInteger.valueOf(0x77777777),BigInteger.valueOf(interpreter.readMemoryDword(1024)));
  assertEquals(BigInteger.valueOf(0x88888888),BigInteger.valueOf(interpreter.readMemoryDword(1028)));
  assertEquals(BigInteger.valueOf(0x99999999),BigInteger.valueOf(interpreter.readMemoryDword(1032)));
  assertEquals(BigInteger.valueOf(0x10101010),BigInteger.valueOf(interpreter.readMemoryDword(1036)));
  assertEquals(BigInteger.valueOf(0x11111111),BigInteger.valueOf(interpreter.readMemoryDword(1040)));
  assertEquals(BigInteger.valueOf(0x12121212),BigInteger.valueOf(interpreter.readMemoryDword(1044)));
  assertEquals(BigInteger.valueOf(0x13131313),BigInteger.valueOf(interpreter.readMemoryDword(1048)));
  assertEquals(BigInteger.valueOf(0x14141414),BigInteger.valueOf(interpreter.readMemoryDword(1052)));
  assertEquals(BigInteger.valueOf(0x15151515),BigInteger.valueOf(interpreter.readMemoryDword(1056)));
  assertEquals(BigInteger.valueOf(0x16161616),BigInteger.valueOf(interpreter.readMemoryDword(1060)));
  assertEquals(BigInteger.valueOf(0x17171717),BigInteger.valueOf(interpreter.readMemoryDword(1064)));
  assertEquals(BigInteger.valueOf(0x18181818),BigInteger.valueOf(interpreter.readMemoryDword(1068)));
  assertEquals(BigInteger.valueOf(0x19191919),BigInteger.valueOf(interpreter.readMemoryDword(1072)));
  assertEquals(BigInteger.valueOf(0x20202020),BigInteger.valueOf(interpreter.readMemoryDword(1076)));
  assertEquals(BigInteger.valueOf(0x21212121),BigInteger.valueOf(interpreter.readMemoryDword(1080)));
  assertEquals(BigInteger.valueOf(0x22222222),BigInteger.valueOf(interpreter.readMemoryDword(1084)));
  assertEquals(BigInteger.valueOf(0x23232323),BigInteger.valueOf(interpreter.readMemoryDword(1088)));
  assertEquals(BigInteger.valueOf(0x24242424),BigInteger.valueOf(interpreter.readMemoryDword(1092)));
  assertEquals(BigInteger.valueOf(0x25252525),BigInteger.valueOf(interpreter.readMemoryDword(1096)));
  assertEquals(BigInteger.valueOf(0x26262626),BigInteger.valueOf(interpreter.readMemoryDword(1100)));
  assertEquals(BigInteger.valueOf(0x27272727),BigInteger.valueOf(interpreter.readMemoryDword(1104)));
  assertEquals(BigInteger.valueOf(0x28282828),BigInteger.valueOf(interpreter.readMemoryDword(1108)));
  assertEquals(BigInteger.valueOf(0x29292929),BigInteger.valueOf(interpreter.readMemoryDword(1112)));
  assertEquals(BigInteger.valueOf(0xFFFFFFFF),BigInteger.valueOf(interpreter.readMemoryDword(1116)));
  assertEquals(BigInteger.valueOf(120L),BigInteger.valueOf(interpreter.getMemorySize()));
  assertEquals(32,TestHelpers.filterNativeRegisters(interpreter.getDefinedRegisters()).size());
}
