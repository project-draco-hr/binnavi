{
  if (CMessageBox.showYesNoQuestion(parent,String.format("Do you really want to delete the following address spaces from the project?\n\n%s",CNameListGenerators.getNameList(addressSpaces))) == JOptionPane.YES_OPTION) {
    for (    final INaviAddressSpace addressSpace : addressSpaces) {
      new Thread(){
        @Override public void run(){
          final CDefaultProgressOperation operation=new CDefaultProgressOperation("",false,true);
          operation.getProgressPanel().setMaximum(1);
          operation.getProgressPanel().setText("Removing address space" + ": " + addressSpace.getConfiguration().getName());
          operation.getProgressPanel().next();
          if (addressSpace.isLoaded()) {
            addressSpace.close();
          }
          if (addressSpace.isLoaded()) {
            final String innerMessage="E00123: " + "Address space could not be deleted";
            final String innerDescription=CUtilityFunctions.createDescription(String.format("BinNavi could not delete the address space '%s'.",addressSpace.getConfiguration().getName()),new String[]{"BinNavi or one of the active plugins vetoed the deletion " + "operation."},new String[]{"The address space can not be deleted until the delete " + "operation is not vetoed anymore."});
            CNaviErrorDialog.show(parent,innerMessage,innerDescription);
          }
 else {
            try {
              project.getContent().removeAddressSpace(addressSpace);
              updater.update();
            }
 catch (            final CouldntDeleteException exception) {
              CUtilityFunctions.logException(exception);
              final String innerMessage="E00143: " + "Address space could not be deleted";
              final String innerDescription=CUtilityFunctions.createDescription("The selected address space could not be deleted.",new String[]{"There was a problem with the database connection."},new String[]{"The address space was not deleted."});
              CNaviErrorDialog.show(parent,innerMessage,innerDescription,exception);
            }
          }
          operation.stop();
        }
      }
.start();
    }
  }
}
