{
  final Matcher matcher=NODE_GLOBAL_PATTERN.matcher(notification.getParameter());
  if (!matcher.find()) {
    return new ArrayList<>();
  }
  final String databaseOperation=matcher.group(2);
  final int moduleId=Integer.parseInt(matcher.group(3));
  final IAddress nodeAddress=new CAddress(new BigInteger(matcher.group(4)));
  final Integer commentId=matcher.group(6) == null ? null : Integer.parseInt(matcher.group(6));
  final INaviModule notificationModule=provider.findModule(moduleId);
  if ((notificationModule == null) || !notificationModule.isLoaded()) {
    return new ArrayList<>();
  }
  final ImmutableCollection<INaviViewNode> nodes=NodeCache.get(provider).getNodeByAddress(nodeAddress,moduleId);
  if (nodes == null) {
    return new ArrayList<>();
  }
  final CommentOperation operation=databaseOperation.equalsIgnoreCase("DELETE") ? CommentOperation.DELETE : CommentOperation.APPEND;
  Collection<CommentNotification> notifications=new ArrayList<>();
  for (  INaviViewNode node : nodes) {
    notifications.add(new CodeNodeCommentNotificationContainer((INaviCodeNode)node,operation,CommentScope.GLOBAL,commentId));
  }
  return notifications;
}
