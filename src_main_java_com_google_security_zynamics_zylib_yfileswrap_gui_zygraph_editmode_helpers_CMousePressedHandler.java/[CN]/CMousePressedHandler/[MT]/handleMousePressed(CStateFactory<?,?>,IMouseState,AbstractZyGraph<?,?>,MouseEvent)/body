{
  final double x=graph.getEditMode().translateX(event.getX());
  final double y=graph.getEditMode().translateY(event.getY());
  final HitInfo hitInfo=graph.getGraph().getHitInfo(x,y);
  if (hitInfo.hasHitNodes()) {
    final Node n=hitInfo.getHitNode();
    if (SwingUtilities.isLeftMouseButton(event) && !event.isAltDown()) {
      return new CStateChange(factory.createNodePressedLeftState(n,event),true);
    }
 else     if (SwingUtilities.isRightMouseButton(event)) {
      return new CStateChange(factory.createNodePressedRightState(n,event),true);
    }
 else     if (SwingUtilities.isMiddleMouseButton(event) || (event.isAltDown() && SwingUtilities.isLeftMouseButton(event))) {
      return new CStateChange(factory.createNodePressedMiddleState(n,event),false);
    }
 else {
      return new CStateChange(defaultState,true);
    }
  }
 else   if (hitInfo.hasHitNodeLabels()) {
    throw new IllegalStateException("yFiles Labels are not in use...");
  }
 else   if (hitInfo.hasHitEdges()) {
    final Edge edge=hitInfo.getHitEdge();
    if (SwingUtilities.isLeftMouseButton(event)) {
      return new CStateChange(factory.createEdgePressedLeftState(edge,event),true);
    }
 else     if (SwingUtilities.isRightMouseButton(event)) {
      return new CStateChange(factory.createEdgePressedRightState(edge,event),true);
    }
 else {
      return new CStateChange(defaultState,true);
    }
  }
 else   if (hitInfo.hasHitEdgeLabels()) {
    return new CStateChange(defaultState,true);
  }
 else   if (hitInfo.hasHitBends()) {
    final Bend bend=hitInfo.getHitBend();
    if (SwingUtilities.isLeftMouseButton(event)) {
      return new CStateChange(factory.createBendPressedLeftState(bend,event),true);
    }
 else {
      return new CStateChange(defaultState,true);
    }
  }
 else   if (hitInfo.hasHitPorts()) {
    return new CStateChange(factory.createDefaultState(),true);
  }
 else {
    if (SwingUtilities.isLeftMouseButton(event)) {
      return new CStateChange(factory.createBackgroundPressedLeftState(event),true);
    }
 else     if (SwingUtilities.isRightMouseButton(event)) {
      return new CStateChange(factory.createBackgroundPressedRightState(event),true);
    }
    return new CStateChange(factory.createDefaultState(),true);
  }
}
