{
  interpreter.setRegister("CF",BigInteger.valueOf(0),OperandSize.DWORD,ReilRegisterStatus.DEFINED);
  interpreter.setRegister("eax",BigInteger.valueOf(0x80000000l),OperandSize.DWORD,ReilRegisterStatus.DEFINED);
  final MockOperandTree operandTree1=new MockOperandTree();
  operandTree1.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"dword");
  operandTree1.root.m_children.add(new MockOperandTreeNode(ExpressionType.REGISTER,"eax"));
  final MockOperandTree operandTree2=new MockOperandTree();
  operandTree2.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"byte");
  operandTree2.root.m_children.add(new MockOperandTreeNode(ExpressionType.IMMEDIATE_INTEGER,"9"));
  final List<MockOperandTree> operands=Lists.newArrayList(operandTree1,operandTree2);
  final IInstruction instruction=new MockInstruction("rol",operands);
  translator.translate(environment,instruction,instructions);
  interpreter.interpret(TestHelpers.createMapping(instructions),BigInteger.valueOf(0x100));
  assertEquals(BigInteger.valueOf(0x400000l),interpreter.getVariableValue("eax"));
  assertEquals(BigInteger.ZERO,interpreter.getVariableValue("CF"));
}
