{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String sourceRegister2=(registerOperand3.getValue());
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize dw=OperandSize.DWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String tmpResult=environment.getNextVariableString();
  final String tmpRm15to0=environment.getNextVariableString();
  final String tmpRm31to16=environment.getNextVariableString();
  final String tmpRn15to0=environment.getNextVariableString();
  final String tmpRn31to16=environment.getNextVariableString();
  final String tmpVar1=environment.getNextVariableString();
  final String tmpVar1Safe=environment.getNextVariableString();
  final String tmpVar1SafeShifted=environment.getNextVariableString();
  final String tmpVar3=environment.getNextVariableString();
  final String tmpVar3Safe=environment.getNextVariableString();
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,dw,String.valueOf(0xFFFFL),dw,tmpRn15to0));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister2,dw,String.valueOf(0xFFFFL),dw,tmpRm15to0));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpRn15to0,dw,tmpRm15to0,dw,tmpVar1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpVar1,dw,String.valueOf(0x1FFFEL),dw,tmpVar1Safe));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar1Safe,bt,String.valueOf(-1L),dw,tmpVar1SafeShifted));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,sourceRegister1,dw,String.valueOf(-16),dw,tmpRn31to16));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,sourceRegister2,dw,String.valueOf(-16),dw,tmpRm31to16));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpRn31to16,dw,tmpRm31to16,dw,tmpVar3));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpVar3,dw,String.valueOf(0x1FFFEL),dw,tmpVar3Safe));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar3Safe,dw,String.valueOf(16 - 1),dw,tmpResult));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,tmpResult,dw,tmpVar1SafeShifted,dw,targetRegister));
}
