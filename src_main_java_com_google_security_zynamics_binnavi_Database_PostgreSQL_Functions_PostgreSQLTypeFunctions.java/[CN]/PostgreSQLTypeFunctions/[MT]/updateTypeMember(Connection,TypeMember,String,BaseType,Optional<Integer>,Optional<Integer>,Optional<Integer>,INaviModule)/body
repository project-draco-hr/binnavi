{
  Preconditions.checkNotNull(member,"Error: member argument can not be null.");
  Preconditions.checkNotNull(newName,"Error: new name argument can not be null");
  Preconditions.checkNotNull(newBaseType,"Error: new base type argument can not be null.");
  Preconditions.checkNotNull(offset,"Error: offset argument can not be null");
  Preconditions.checkNotNull(newNumberOfElements,"Error: new number of elements argument can not be null.");
  Preconditions.checkNotNull(newArgumentIndex,"Error: new argument index argument can not be null.");
  try {
    final PreparedStatement statement=connection.prepareStatement("UPDATE " + CTableNames.TYPE_MEMBERS_TABLE + " SET name = ?, base_type = ?, parent_id = ?, \"offset\" = ?, "+ "number_of_elements = ?, argument = ? WHERE module_id = ? AND id = ?");
    try {
      statement.setString(1,newName);
      statement.setInt(2,newBaseType.getId());
      statement.setInt(3,member.getParentType().getId());
      if (offset.isPresent()) {
        statement.setInt(4,offset.get());
      }
 else {
        statement.setNull(4,Types.INTEGER);
      }
      if (newNumberOfElements.isPresent()) {
        statement.setInt(5,newNumberOfElements.get());
      }
 else {
        statement.setNull(5,Types.INTEGER);
      }
      if (newArgumentIndex.isPresent()) {
        statement.setInt(6,newArgumentIndex.get());
      }
 else {
        statement.setNull(6,Types.INTEGER);
      }
      statement.setInt(7,module.getConfiguration().getId());
      statement.setInt(8,member.getId());
      statement.executeUpdate();
    }
  finally {
      statement.close();
    }
  }
 catch (  final SQLException exception) {
    throw new CouldntSaveDataException(exception);
  }
}
