{
  Preconditions.checkNotNull(provider,"IE02449: provider argument can not be null");
  Preconditions.checkNotNull(groupNode,"IE02450: groupNode argument can not be null");
  Preconditions.checkNotNull(commentText,"IE02451: commentText argument can not be null");
  Preconditions.checkNotNull(userId,"IE02452: userId argument can not be null");
  Preconditions.checkArgument(groupNode.getId() > 0,"Error: group node is not saved.");
  final String function=" { ? = call append_group_node_comment(?, ?, ?) } ";
  try {
    final CallableStatement appendCommentFunction=provider.getConnection().getConnection().prepareCall(function);
    try {
      appendCommentFunction.registerOutParameter(1,Types.INTEGER);
      appendCommentFunction.setInt(2,groupNode.getId());
      appendCommentFunction.setInt(3,userId);
      appendCommentFunction.setString(4,commentText);
      appendCommentFunction.execute();
      final Integer commentId=appendCommentFunction.getInt(1);
      if (appendCommentFunction.wasNull()) {
        throw new CouldntSaveDataException("Error: Got an comment id of null from the database");
      }
      return commentId;
    }
  finally {
      appendCommentFunction.close();
    }
  }
 catch (  final SQLException exception) {
    throw new CouldntSaveDataException(exception);
  }
}
