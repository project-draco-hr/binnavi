{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String sourceRegister2=(registerOperand3.getValue());
  final long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  new Processor(){
    @Override protected String[] process(    long baseOffset,    final String[] firstTwo,    final String[] secondTwo){
      final String diff1=environment.getNextVariableString();
      final String sum1=environment.getNextVariableString();
      final String diff1Sat=environment.getNextVariableString();
      final String sum1Sat=environment.getNextVariableString();
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstTwo[0],dw,secondTwo[1],dw,sum1));
      instructions.add(ReilHelpers.createSub(baseOffset++,dw,firstTwo[1],dw,secondTwo[0],dw,diff1));
      Helpers.unsignedSat(baseOffset,environment,instruction,instructions,firstTwo[0],secondTwo[1],sum1,"ADD",sum1Sat,16,"");
      baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
      Helpers.unsignedSat(baseOffset,environment,instruction,instructions,firstTwo[1],secondTwo[0],diff1,"SUB",diff1Sat,16,"");
      baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
      return new String[]{sum1Sat,diff1Sat};
    }
  }
.generate(environment,baseOffset,16,sourceRegister1,sourceRegister2,targetRegister,instructions);
}
