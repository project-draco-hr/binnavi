{
  interpreter.setRegister("ZF",BigInteger.ONE,OperandSize.BYTE,ReilRegisterStatus.DEFINED);
  interpreter.setRegister("eax",BigInteger.valueOf(0x2000),OperandSize.DWORD,ReilRegisterStatus.DEFINED);
  final MockOperandTree operandTree1=new MockOperandTree();
  operandTree1.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"dword");
  operandTree1.root.m_children.add(new MockOperandTreeNode(ExpressionType.REGISTER,"eax"));
  final List<MockOperandTree> operands=Lists.newArrayList(operandTree1);
  final IInstruction instruction=new MockInstruction("jz",operands);
  translator.translate(environment,instruction,instructions);
  interpreter.interpret(TestHelpers.createMapping(instructions),BigInteger.valueOf(0x100));
  assertEquals(3,TestHelpers.filterNativeRegisters(interpreter.getDefinedRegisters()).size());
  assertEquals(BigInteger.valueOf(0x2000),interpreter.getVariableValue("eax"));
  assertEquals(BigInteger.valueOf(0x2000),interpreter.getVariableValue("eip"));
  assertEquals(BigInteger.ONE,interpreter.getVariableValue("ZF"));
  assertEquals(BigInteger.ZERO,BigInteger.valueOf(interpreter.getMemorySize()));
}
