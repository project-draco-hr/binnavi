{
  Preconditions.checkNotNull(provider,"IE00505: provider argument can not be null");
  Preconditions.checkNotNull(edge,"IE00506: codeNode argument can not be null");
  Preconditions.checkNotNull(commentId,"IE00507: comment argument can not be null");
  Preconditions.checkNotNull(userId,"IE00508: userId argument can not be null");
  final String function=" { ? = call delete_global_edge_comment(?, ?, ?, ?, ?, ?) } ";
  try {
    final CallableStatement deleteCommentFunction=provider.getConnection().getConnection().prepareCall(function);
    try {
      deleteCommentFunction.registerOutParameter(1,Types.INTEGER);
      deleteCommentFunction.setInt(2,getModuleId(edge.getSource()));
      deleteCommentFunction.setInt(3,getModuleId(edge.getTarget()));
      deleteCommentFunction.setObject(4,((INaviCodeNode)edge.getSource()).getAddress().toBigInteger(),Types.BIGINT);
      deleteCommentFunction.setObject(5,((INaviCodeNode)edge.getTarget()).getAddress().toBigInteger(),Types.BIGINT);
      deleteCommentFunction.setInt(6,commentId);
      deleteCommentFunction.setInt(7,userId);
      deleteCommentFunction.execute();
      deleteCommentFunction.getInt(1);
      if (deleteCommentFunction.wasNull()) {
        throw new IllegalArgumentException("Error: the comment id returned from the database was null");
      }
    }
  finally {
      deleteCommentFunction.close();
    }
  }
 catch (  SQLException|MaybeNullException exception) {
    throw new CouldntDeleteException(exception);
  }
}
