{
  final MockFunctionListener listener=new MockFunctionListener();
  final MockSqlProvider provider=new MockSqlProvider();
  final CModule internalModule=new CModule(1,"","",new Date(),new Date(),"00000000000000000000000000000000","0000000000000000000000000000000000000000",0,0,new CAddress(0),new CAddress(0),null,null,Integer.MAX_VALUE,false,provider);
  @SuppressWarnings("unused") final CFunction parentFunction=new CFunction(internalModule,new MockView(),new CAddress(0x123),"Mock Function","Mock Function","Mock Description",0,0,0,0,FunctionType.NORMAL,"",0,null,null,null,provider);
  final List<INaviInstruction> instructions1=new ArrayList<INaviInstruction>();
  instructions1.add(new MockInstruction(1234));
  final List<INaviInstruction> instructions2=new ArrayList<INaviInstruction>();
  instructions2.add(new MockInstruction(1235));
  new CBlockNode(new CBasicBlock(1,"",instructions1));
  new CBlockNode(new CBasicBlock(1,"",instructions2));
  final Function function=new Function(ModuleFactory.get(),m_internalFunction);
  function.addListener(listener);
  function.load();
  assertEquals("loadedFunction;",listener.events);
  assertEquals(4,function.getEdgeCount());
  assertEquals(5,function.getBlockCount());
  assertEquals(1,function.getGraph().getNodes().get(0).getChildren().size());
  function.close();
  function.removeListener(listener);
  assertEquals("loadedFunction;closedFunction;",listener.events);
  assertFalse(function.isLoaded());
}
