{
  final ImmutableMap<TypeMember,Integer> oldOffsets=captureMemberOffsets();
  final ImmutableMap<BaseType,Integer> oldSizes=captureTypeSizes();
  final TypeChangedEventCollector events=new TypeChangedEventCollector();
  typeManager.addListener(events);
  final TypeMember deletedMember=typeSystem.simpleStruct.getLastMember();
  final int sizeDelta=-deletedMember.getBitSize();
  typeManager.deleteMember(deletedMember);
  final TypeChangedEventCollector expectedEvents=new TypeChangedEventCollector();
  expectedEvents.memberUpdated(typeSystem.dnsIntMember);
  expectedEvents.memberUpdated(typeSystem.dnsPointerMember);
  expectedEvents.memberDeleted(deletedMember);
  expectedEvents.typesUpdated(Sets.<BaseType>newHashSet(typeSystem.simpleStruct,typeSystem.nestedStruct,typeSystem.doubleNestedStruct,typeSystem.complexUnion));
  assertEquals(expectedEvents,events);
  assertEquals(oldSizes.get(typeSystem.simpleStruct) + sizeDelta,typeSystem.simpleStruct.getBitSize());
  assertEquals(oldSizes.get(typeSystem.nestedStruct) + sizeDelta,typeSystem.nestedStruct.getBitSize());
  assertEquals(oldSizes.get(typeSystem.doubleNestedStruct) + sizeDelta,typeSystem.doubleNestedStruct.getBitSize());
  for (  TypeMember member : typeSystem.simpleUnion) {
    assertEquals(Optional.<Integer>of(Integer.valueOf(0)),member.getBitOffset());
  }
  assertEquals(oldSizes.get(typeSystem.simpleUnion),Integer.valueOf(typeSystem.simpleUnion.getBitSize()));
  for (  TypeMember member : typeSystem.complexUnion) {
    assertEquals(Optional.<Integer>of(Integer.valueOf(0)),member.getBitOffset());
  }
  assertEquals(typeSystem.doubleNestedStruct.getBitSize(),typeSystem.complexUnion.getBitSize());
  assertEquals(oldOffsets.get(typeSystem.ssIntMember),typeSystem.ssIntMember.getBitOffset().get());
  assertEquals(oldOffsets.get(typeSystem.ssUintMember),typeSystem.ssUintMember.getBitOffset().get());
  assertEquals(oldOffsets.get(typeSystem.nsIntMember),typeSystem.nsIntMember.getBitOffset().get());
  assertEquals(oldOffsets.get(typeSystem.nsSimpleStructMember),typeSystem.nsSimpleStructMember.getBitOffset().get());
  assertEquals(oldOffsets.get(typeSystem.dnsNestedStructMember),typeSystem.dnsNestedStructMember.getBitOffset().get());
  assertEquals(oldOffsets.get(typeSystem.dnsIntMember) + sizeDelta,(int)typeSystem.dnsIntMember.getBitOffset().get());
  assertEquals(oldOffsets.get(typeSystem.dnsPointerMember) + sizeDelta,(int)typeSystem.dnsPointerMember.getBitOffset().get());
  for (  TypeMember member : typeSystem.simpleUnion) {
    assertEquals(Optional.<Integer>of(Integer.valueOf(0)),member.getBitOffset());
  }
  for (  TypeMember member : typeSystem.complexUnion) {
    assertEquals(Optional.<Integer>of(Integer.valueOf(0)),member.getBitOffset());
  }
}
