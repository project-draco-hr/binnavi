{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode shifter=instruction.getOperands().get(2).getRootNode();
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister=(registerOperand2.getValue());
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String tmpVar1=environment.getNextVariableString();
  final String highResult=environment.getNextVariableString();
  final String lowResult=environment.getNextVariableString();
  final String tmpHighResult=environment.getNextVariableString();
  final String tmpLowResult=environment.getNextVariableString();
  final String tmpOperand2from23to16=environment.getNextVariableString();
  final String tmpOperand2from23to16signExtended=environment.getNextVariableString();
  final String tmpOperand2from7to0=environment.getNextVariableString();
  final String tmpOperand2from7to0signExtended=environment.getNextVariableString();
  final String tmpOperand2Shifted=environment.getNextVariableString();
  final String tmpRn15to0=environment.getNextVariableString();
  final String tmpRn31to16=environment.getNextVariableString();
  final Pair<String,String> shifterPair=AddressingModeOneGenerator.generate(baseOffset,environment,instruction,instructions,shifter);
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String shifterOperand=shifterPair.first();
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,shifterOperand,wd,String.valueOf(0xFFL),dw,tmpOperand2from7to0));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,shifterOperand,wd,String.valueOf(-16L),dw,tmpOperand2Shifted));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpOperand2Shifted,wd,String.valueOf(0xFFL),dw,tmpOperand2from23to16));
  Helpers.signExtend(baseOffset,environment,instruction,instructions,dw,tmpOperand2from7to0,dw,tmpOperand2from7to0signExtended,8);
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  Helpers.signExtend(baseOffset,environment,instruction,instructions,dw,tmpOperand2from23to16,dw,tmpOperand2from23to16signExtended,8);
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister,wd,String.valueOf(0xFFFFL),dw,tmpRn15to0));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,sourceRegister,wd,String.valueOf(-16L),dw,tmpRn31to16));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,tmpRn15to0,dw,tmpOperand2from7to0signExtended,dw,tmpLowResult));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpLowResult,dw,String.valueOf(0xFFFFL),wd,lowResult));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,tmpRn31to16,dw,tmpOperand2from23to16signExtended,dw,tmpHighResult));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpHighResult,dw,String.valueOf(0xFFFFL),wd,highResult));
  instructions.add(ReilHelpers.createBsh(baseOffset++,wd,highResult,wd,String.valueOf(16L),dw,tmpVar1));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,tmpVar1,dw,lowResult,dw,targetRegister));
}
