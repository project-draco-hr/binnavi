{
  Preconditions.checkNotNull(environment,"Error: Argument environment can't be null");
  Preconditions.checkNotNull(instructions,"Error: Argument instructions can't be null");
  Preconditions.checkArgument(baseOffset >= 0,"Error: Argument offset can't be less than 0");
  long offset=baseOffset;
  final int previousInstructions=(int)(baseOffset % 0x100);
  final OperandSize archSize=environment.getArchitectureSize();
  final OperandSize resultSize=TranslationHelpers.getNextSize(archSize);
  String maskedEax=null;
  final String ediChange=String.valueOf(operandSize.getByteSize());
  final String mask=String.valueOf(TranslationHelpers.getAllBitsMask(operandSize));
  final String truncateMask=String.valueOf(TranslationHelpers.getAllBitsMask(archSize));
  if (operandSize != archSize) {
    maskedEax=environment.getNextVariableString();
    instructions.add(ReilHelpers.createAnd(offset,archSize,"eax",archSize,mask,archSize,maskedEax));
    offset++;
  }
 else {
    maskedEax="eax";
  }
  final String addResult=environment.getNextVariableString();
  final String subResult=environment.getNextVariableString();
  instructions.add(ReilHelpers.createStm(offset,operandSize,maskedEax,archSize,"edi"));
  final String jmpGoal=String.format("%d.%d",ReilHelpers.toNativeAddress(new CAddress(baseOffset)).toLong(),previousInstructions + 5 + (operandSize != archSize ? 1 : 0));
  final String jmpGoal2=String.format("%d.%d",ReilHelpers.toNativeAddress(new CAddress(baseOffset)).toLong(),previousInstructions + 7 + (operandSize != archSize ? 1 : 0));
  instructions.add(ReilHelpers.createJcc(offset + 1,OperandSize.BYTE,Helpers.DIRECTION_FLAG,OperandSize.ADDRESS,jmpGoal));
  instructions.add(ReilHelpers.createAdd(offset + 2,archSize,"edi",archSize,ediChange,resultSize,addResult));
  instructions.add(ReilHelpers.createAnd(offset + 3,resultSize,addResult,archSize,truncateMask,archSize,"edi"));
  instructions.add(ReilHelpers.createJcc(offset + 4,OperandSize.BYTE,"1",OperandSize.ADDRESS,jmpGoal2));
  instructions.add(ReilHelpers.createSub(offset + 5,archSize,"edi",archSize,ediChange,resultSize,subResult));
  instructions.add(ReilHelpers.createAnd(offset + 6,resultSize,subResult,archSize,truncateMask,archSize,"edi"));
  instructions.add(ReilHelpers.createNop(offset + 7));
}
