{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode shifter=instruction.getOperands().get(1).getRootNode();
  final String sourceRegister=(registerOperand1.getValue());
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String tmpVar1=environment.getNextVariableString();
  final String aluOut=environment.getNextVariableString();
  final Pair<String,String> shifterPair=AddressingModeOneGenerator.generate(baseOffset,environment,instruction,instructions,shifter);
  baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String shifterOperand=shifterPair.first();
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,sourceRegister,dw,shifterOperand,qw,tmpVar1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,qw,tmpVar1,dw,String.valueOf(0xFFFFFFFFL),dw,aluOut));
  final String tmpVar3=environment.getNextVariableString();
  final String tmpVar4=environment.getNextVariableString();
  final String msbVar1=environment.getNextVariableString();
  final String msbVar2=environment.getNextVariableString();
  instructions.add(ReilHelpers.createBsh(baseOffset++,qw,tmpVar1,dw,String.valueOf(-31L),bt,tmpVar3));
  instructions.add(ReilHelpers.createAnd(baseOffset++,bt,tmpVar3,bt,String.valueOf(1L),bt,"N"));
  instructions.add(ReilHelpers.createBisz(baseOffset++,dw,aluOut,bt,"Z"));
  instructions.add(ReilHelpers.createBsh(baseOffset++,qw,tmpVar1,wd,String.valueOf(-32L),bt,tmpVar4));
  instructions.add(ReilHelpers.createAnd(baseOffset++,bt,tmpVar4,bt,String.valueOf(1L),bt,"C"));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,shifterOperand,wd,String.valueOf(-31L),bt,msbVar1));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,sourceRegister,wd,String.valueOf(-31L),bt,msbVar2));
  instructions.add(ReilHelpers.createXor(baseOffset++,bt,msbVar1,bt,"N",bt,tmpVar4));
  instructions.add(ReilHelpers.createXor(baseOffset++,bt,msbVar2,bt,"N",bt,tmpVar3));
  instructions.add(ReilHelpers.createAnd(baseOffset++,bt,tmpVar4,bt,tmpVar3,bt,"V"));
}
