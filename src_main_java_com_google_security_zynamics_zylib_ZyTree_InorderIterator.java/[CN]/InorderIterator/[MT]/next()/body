{
  if (!m_started) {
    pushLongestPathFrom(m_root);
    m_started=true;
  }
 else {
    if (traversalStack.empty()) {
      throw new RuntimeException("Internal Error: Traversal already finished");
    }
    final Pair<IZyTreeNode,Integer> justProcessed=traversalStack.pop();
    final IZyTreeNode justProcessedNode=justProcessed.first();
    final int justProcessedChildrenProcessed=justProcessed.second();
    if (traversalStack.empty()) {
      if (justProcessedChildrenProcessed == justProcessedNode.getChildren().size()) {
        return false;
      }
 else {
        if (justProcessedNode.getChildren().size() == 0) {
          throw new RuntimeException("Error");
        }
 else         if (justProcessedNode.getChildren().size() == 1) {
          pushLongestPathFrom(justProcessed.first().getChildren().get(justProcessedChildrenProcessed));
        }
 else {
          traversalStack.push(new Pair<IZyTreeNode,Integer>(justProcessed.first().getChildren().get(justProcessedChildrenProcessed),0));
        }
      }
    }
 else {
      if (justProcessedChildrenProcessed == justProcessedNode.getChildren().size()) {
        final Pair<IZyTreeNode,Integer> parentProcessed=traversalStack.pop();
        traversalStack.push(new Pair<IZyTreeNode,Integer>(parentProcessed.first(),parentProcessed.second() + 1));
      }
 else {
        if (justProcessedNode.getChildren().size() == 0) {
          throw new RuntimeException("Error");
        }
 else         if (justProcessedNode.getChildren().size() == 1) {
          pushLongestPathFrom(justProcessed.first().getChildren().get(justProcessedChildrenProcessed));
        }
 else {
          traversalStack.push(new Pair<IZyTreeNode,Integer>(justProcessed.first().getChildren().get(justProcessedChildrenProcessed),0));
        }
      }
    }
  }
  return !traversalStack.empty();
}
