{
  final IUser user=new UniqueTestUserGenerator(getProvider()).nextActiveUser();
  final List<IComment> storedComments=edge.getGlobalComment() == null ? new ArrayList<IComment>() : edge.getGlobalComment();
  final IComment lastComment=storedComments.isEmpty() ? null : Iterables.getLast(storedComments);
  final String beforeEditCommentString=" EDIT GLOBAL EDGE COMMENT BEFORE EDIT ";
  final int editedCommentId=getProvider().appendGlobalEdgeComment(edge,beforeEditCommentString,user.getUserId());
  final IComment commentBeforeEdit=new CComment(editedCommentId,user,lastComment,beforeEditCommentString);
  final ArrayList<IComment> commentsFromDatabase=getProvider().loadCommentById(editedCommentId);
  assertNotNull(commentsFromDatabase);
  assertTrue(commentsFromDatabase.contains(commentBeforeEdit));
  assertEquals(storedComments.size() + 1,commentsFromDatabase.size());
  final IUser wrongUser=new UniqueTestUserGenerator(getProvider()).nextActiveUser();
  getProvider().editGlobalEdgeComment(edge,editedCommentId,wrongUser.getUserId()," FAIL ");
}
