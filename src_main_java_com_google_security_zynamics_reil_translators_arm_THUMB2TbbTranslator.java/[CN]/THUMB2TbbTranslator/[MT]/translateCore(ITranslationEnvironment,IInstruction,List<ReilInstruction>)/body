{
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize wd=OperandSize.WORD;
  final OperandSize bt=OperandSize.BYTE;
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0).getChildren().get(0).getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(0).getRootNode().getChildren().get(0).getChildren().get(0).getChildren().get(1);
  final String firstRegister=registerOperand1.getValue();
  final String secondRegister=registerOperand2.getValue();
  final String memoryAddress=environment.getNextVariableString();
  final String halfword=environment.getNextVariableString();
  final String twoTimesHalfword=environment.getNextVariableString();
  final String jumpTarget=environment.getNextVariableString();
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstRegister,dw,secondRegister,dw,memoryAddress));
  instructions.add(ReilHelpers.createLdm(baseOffset++,dw,memoryAddress,bt,halfword));
  instructions.add(ReilHelpers.createMul(baseOffset++,bt,halfword,wd,String.valueOf(2),dw,twoTimesHalfword));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,"PC",dw,twoTimesHalfword,dw,jumpTarget));
  instructions.add(ReilHelpers.createJcc(baseOffset++,bt,String.valueOf(1),dw,jumpTarget));
}
