{
  String typeValue="";
  if (instruction.getMnemonic().endsWith(".W")) {
    typeValue=instruction.getMnemonic().length() == 9 ? instruction.getMnemonic().substring(5,7) : instruction.getMnemonic().substring(3,5);
  }
 else {
    typeValue=instruction.getMnemonic().length() == 7 ? instruction.getMnemonic().substring(5) : instruction.getMnemonic().substring(3);
  }
  IOperandTreeNode registerOperand1;
  String wBit="1";
  if (instruction.getOperands().get(0).getRootNode().getChildren().get(0).getChildren().size() == 1) {
    wBit="2";
    registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0).getChildren().get(0);
  }
 else {
    registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  }
  final IOperandTreeNode rootNodeOfRegisterList=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final String registerNodeValue=(registerOperand1.getValue());
  final int registerListLength=rootNodeOfRegisterList.getChildren().size();
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize dw=OperandSize.DWORD;
  final String tmpValue=environment.getNextVariableString();
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String addressPair=AddressingModeFourGenerator.generate(baseOffset,environment,instruction,instructions,typeValue,registerNodeValue,wBit,rootNodeOfRegisterList);
  final String tmpAddress=addressPair;
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  for (int i=0; i < registerListLength; i++) {
    if ((rootNodeOfRegisterList.getChildren().get(i).getValue()).equalsIgnoreCase("PC")) {
      instructions.add(ReilHelpers.createLdm(baseOffset++,dw,tmpAddress,dw,tmpValue));
      instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpValue,dw,String.valueOf(0xFFFFFFFEL),dw,("PC")));
      instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpValue,bt,String.valueOf(1),bt,"T"));
    }
 else {
      instructions.add(ReilHelpers.createLdm(baseOffset++,dw,tmpAddress,dw,(rootNodeOfRegisterList.getChildren().get(i).getValue())));
    }
    instructions.add(ReilHelpers.createAdd(baseOffset++,dw,tmpAddress,bt,String.valueOf(4L),dw,tmpAddress));
  }
}
