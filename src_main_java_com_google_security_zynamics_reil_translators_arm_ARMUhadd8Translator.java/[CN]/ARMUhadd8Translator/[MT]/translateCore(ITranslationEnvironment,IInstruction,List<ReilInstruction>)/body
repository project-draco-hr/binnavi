{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String sourceRegister2=(registerOperand3.getValue());
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  new Processor(){
    @Override protected int getResultShiftDelta(){
      return -1;
    }
    @Override protected String[] process(    final long offset,    final String[] firstFour,    final String[] secondFour){
      final String sum1=environment.getNextVariableString();
      final String sum2=environment.getNextVariableString();
      final String sum3=environment.getNextVariableString();
      final String sum4=environment.getNextVariableString();
      long baseOffset=offset;
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstFour[0],dw,secondFour[0],dw,sum1));
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstFour[1],dw,secondFour[1],dw,sum2));
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstFour[2],dw,secondFour[2],dw,sum3));
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstFour[3],dw,secondFour[3],dw,sum4));
      return new String[]{sum1,sum2,sum3,sum4};
    }
  }
.generate(environment,baseOffset,8,sourceRegister1,sourceRegister2,targetRegister,instructions);
}
