{
  final BookmarkManager manager=new BookmarkManager();
  final MockBookmarkListener listener=new MockBookmarkListener();
  manager.addListener(listener);
  try {
    manager.addBookmark(null);
    fail();
  }
 catch (  final NullPointerException e) {
  }
  assertEquals(0,listener.changes);
  assertEquals(0,manager.getNumberOfBookmarks());
  manager.addBookmark(new CBookmark(new CAddress(BigInteger.valueOf(123)),"A"));
  assertEquals(1,listener.changes);
  assertEquals(1,manager.getNumberOfBookmarks());
  manager.addBookmark(new CBookmark(new CAddress(BigInteger.valueOf(124)),"B"));
  assertEquals(2,listener.changes);
  assertEquals(2,manager.getNumberOfBookmarks());
  try {
    manager.addBookmark(new CBookmark(new CAddress(BigInteger.valueOf(124)),"C"));
    fail();
  }
 catch (  final IllegalArgumentException e) {
  }
  manager.removeBookmark(manager.getBookmark(new CAddress(BigInteger.valueOf(124))));
  assertEquals(3,listener.changes);
  assertEquals(1,manager.getNumberOfBookmarks());
  try {
    manager.removeBookmark(null);
    fail();
  }
 catch (  final NullPointerException e) {
  }
  try {
    manager.removeBookmark(new CBookmark(new CAddress(BigInteger.valueOf(125)),"C"));
    fail();
  }
 catch (  final IllegalArgumentException e) {
  }
  assertEquals(3,listener.changes);
  assertEquals(1,manager.getNumberOfBookmarks());
  assertEquals(BigInteger.valueOf(123),manager.getBookmark(0).getAddress().toBigInteger());
  manager.removeListener(listener);
}
