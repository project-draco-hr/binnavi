{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  IOperandTreeNode registerOperand2=null;
  if ((instruction.getOperands().get(1).getRootNode().getChildren().get(0).getChildren().get(0).getType() == ExpressionType.IMMEDIATE_INTEGER) || (instruction.getOperands().get(1).getRootNode().getChildren().get(0).getChildren().get(0).getType() == ExpressionType.REGISTER)) {
    registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0).getChildren().get(0);
  }
 else {
    registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0).getChildren().get(0).getChildren().get(0);
  }
  IOperandTreeNode variableOperand1=null;
  if (instruction.getOperands().get(1).getRootNode().getChildren().get(0).getChildren().get(0).getChildren().size() == 2) {
    variableOperand1=instruction.getOperands().get(1).getRootNode().getChildren().get(0).getChildren().get(0).getChildren().get(1);
  }
  final String targetRegister1=(registerOperand1.getValue());
  final String sourceRegister2=(registerOperand2.getValue());
  final String sourceVariable1=variableOperand1 == null ? "0" : (variableOperand1.getValue());
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize dw=OperandSize.DWORD;
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String tmpAddress=environment.getNextVariableString();
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,sourceRegister2,dw,sourceVariable1,dw,tmpAddress));
  instructions.add(ReilHelpers.createLdm(baseOffset++,dw,tmpAddress,bt,targetRegister1));
}
