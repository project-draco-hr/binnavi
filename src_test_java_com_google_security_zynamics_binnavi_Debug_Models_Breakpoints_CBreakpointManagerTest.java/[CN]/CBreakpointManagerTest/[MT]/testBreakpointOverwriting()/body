{
  final MockBreakpointManagerListener listener=new MockBreakpointManagerListener();
  m_manager.addListener(listener);
  m_manager.addBreakpoints(BreakpointType.ECHO,CommonTestObjects.BP_ADDRESS_123_SET);
  assertEquals(0,listener.size());
  assertEquals(3,m_manager.getNumberOfBreakpoints(BreakpointType.REGULAR));
  assertEquals(2,m_manager.getNumberOfBreakpoints(BreakpointType.ECHO));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.STEP));
  m_manager.addBreakpoints(BreakpointType.ECHO,Sets.newHashSet(new BreakpointAddress(m_module,new UnrelocatedAddress(new CAddress(0x1000)))));
  assertEquals(0,listener.size());
  assertEquals(3,m_manager.getNumberOfBreakpoints(BreakpointType.REGULAR));
  assertEquals(2,m_manager.getNumberOfBreakpoints(BreakpointType.ECHO));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.STEP));
  m_manager.addBreakpoints(BreakpointType.STEP,CommonTestObjects.BP_ADDRESS_123_SET);
  assertEquals(0,listener.size());
  assertEquals(3,m_manager.getNumberOfBreakpoints(BreakpointType.REGULAR));
  assertEquals(2,m_manager.getNumberOfBreakpoints(BreakpointType.ECHO));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.STEP));
  m_manager.addBreakpoints(BreakpointType.STEP,Sets.newHashSet(new BreakpointAddress(m_module,new UnrelocatedAddress(new CAddress(0x111)))));
  assertEquals(2,listener.size());
  assertEquals("Remove: 00000111",listener.getEvent(0));
  assertEquals("Add: 00000111",listener.getEvent(1));
  assertEquals(3,m_manager.getNumberOfBreakpoints(BreakpointType.REGULAR));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.ECHO));
  assertEquals(2,m_manager.getNumberOfBreakpoints(BreakpointType.STEP));
  m_manager.addBreakpoints(BreakpointType.REGULAR,Sets.newHashSet(new BreakpointAddress(m_module,new UnrelocatedAddress(new CAddress(0x1000)))));
  assertEquals(4,listener.size());
  assertEquals("Remove: 00001000",listener.getEvent(2));
  assertEquals("Add: 00001000",listener.getEvent(3));
  assertEquals(4,m_manager.getNumberOfBreakpoints(BreakpointType.REGULAR));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.ECHO));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.STEP));
  m_manager.addBreakpoints(BreakpointType.REGULAR,Sets.newHashSet(new BreakpointAddress(m_module,new UnrelocatedAddress(new CAddress(0x222)))));
  assertEquals(6,listener.size());
  assertEquals("Remove: 00000222",listener.getEvent(4));
  assertEquals("Add: 00000222",listener.getEvent(5));
  assertEquals(5,m_manager.getNumberOfBreakpoints(BreakpointType.REGULAR));
  assertEquals(0,m_manager.getNumberOfBreakpoints(BreakpointType.ECHO));
  assertEquals(1,m_manager.getNumberOfBreakpoints(BreakpointType.STEP));
}
