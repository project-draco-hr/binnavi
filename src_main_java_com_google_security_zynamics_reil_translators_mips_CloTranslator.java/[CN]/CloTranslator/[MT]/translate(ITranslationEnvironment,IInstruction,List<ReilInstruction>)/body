{
  TranslationHelpers.checkTranslationArguments(environment,instruction,instructions,"clo");
  final String targetRegister=instruction.getOperands().get(0).getRootNode().getChildren().get(0).getValue();
  final String sourceRegister=instruction.getOperands().get(1).getRootNode().getChildren().get(0).getValue();
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String a=environment.getNextVariableString();
  final String b=environment.getNextVariableString();
  final String c=environment.getNextVariableString();
  final String d=environment.getNextVariableString();
  final String e=environment.getNextVariableString();
  final String f=environment.getNextVariableString();
  final String g=environment.getNextVariableString();
  final String h=environment.getNextVariableString();
  final String i=environment.getNextVariableString();
  final String j=environment.getNextVariableString();
  final String k=environment.getNextVariableString();
  final String l=environment.getNextVariableString();
  final String m=environment.getNextVariableString();
  final String n=environment.getNextVariableString();
  final String o=environment.getNextVariableString();
  final String p=environment.getNextVariableString();
  final String q=environment.getNextVariableString();
  final String r=environment.getNextVariableString();
  final String s=environment.getNextVariableString();
  final String t=environment.getNextVariableString();
  final String u=environment.getNextVariableString();
  final String v=environment.getNextVariableString();
  final String w=environment.getNextVariableString();
  final String x=environment.getNextVariableString();
  final String y=environment.getNextVariableString();
  final String z=environment.getNextVariableString();
  instructions.add(ReilHelpers.createXor(baseOffset++,dw,sourceRegister,dw,String.valueOf(0xFFFFFFFFL),dw,a));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,a,dw,String.valueOf(-1L),dw,y));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,y,dw,a,dw,p));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,p,dw,String.valueOf(-2L),dw,q));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,q,dw,p,dw,r));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,r,dw,String.valueOf(-4L),dw,s));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,s,dw,r,dw,t));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,t,dw,String.valueOf(-8L),dw,u));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,u,dw,t,dw,v));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,v,dw,String.valueOf(-16L),dw,w));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,w,dw,v,dw,z));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,z,dw,String.valueOf(-1L),dw,x));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,x,dw,String.valueOf(0x55555555L),dw,b));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,z,dw,b,qw,c));
  instructions.add(ReilHelpers.createAnd(baseOffset++,qw,c,dw,String.valueOf(0x33333333L),dw,d));
  instructions.add(ReilHelpers.createBsh(baseOffset++,qw,c,dw,String.valueOf(-2L),dw,e));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,e,dw,String.valueOf(0x33333333),dw,f));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,f,dw,d,dw,g));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,g,dw,String.valueOf(-4L),dw,h));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,h,dw,g,dw,i));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,i,dw,String.valueOf(0x0F0F0F0F),dw,j));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,j,dw,String.valueOf(-8L),dw,k));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,k,dw,j,dw,l));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,l,dw,String.valueOf(-16L),dw,m));
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,m,dw,l,dw,n));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,n,dw,String.valueOf(0x0000003F),dw,o));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,String.valueOf(32L),dw,o,dw,targetRegister));
}
