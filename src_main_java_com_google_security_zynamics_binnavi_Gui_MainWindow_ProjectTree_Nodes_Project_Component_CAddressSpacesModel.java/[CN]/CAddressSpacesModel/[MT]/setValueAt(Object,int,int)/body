{
  if ((col != NAME_COLUMN) && (col != DESCRIPTION_COLUMN)) {
    throw new IllegalStateException("IE01170: Column can not be edited");
  }
  final INaviAddressSpace addressSpace=getAddressSpaces().get(row);
  if (col == NAME_COLUMN) {
    try {
      addressSpace.getConfiguration().setName((String)value);
    }
 catch (    final CouldntSaveDataException e) {
      CUtilityFunctions.logException(e);
      final String innerMessage="E00169: " + "Could not save address space name";
      final String innerDescription=CUtilityFunctions.createDescription(String.format("The new name of the address space '%s' could not be saved.",addressSpace.getConfiguration().getName()),new String[]{"There was a problem with the database connection."},new String[]{"The address space keeps its old name."});
      CNaviErrorDialog.show(null,innerMessage,innerDescription,e);
    }
  }
 else   if (col == DESCRIPTION_COLUMN) {
    try {
      addressSpace.getConfiguration().setDescription((String)value);
    }
 catch (    final CouldntSaveDataException e) {
      CUtilityFunctions.logException(e);
      final String innerMessage="E00170: " + "Could not save address space description";
      final String innerDescription=CUtilityFunctions.createDescription(String.format("The new description of the address space '%s' could not be saved.",addressSpace.getConfiguration().getName()),new String[]{"There was a problem with the database connection."},new String[]{"The address space keeps its old description."});
      CNaviErrorDialog.show(null,innerMessage,innerDescription,e);
    }
  }
}
