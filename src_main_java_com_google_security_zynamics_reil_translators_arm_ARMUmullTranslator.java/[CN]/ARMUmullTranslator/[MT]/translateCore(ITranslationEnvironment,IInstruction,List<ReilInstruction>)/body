{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand4=instruction.getOperands().get(3).getRootNode().getChildren().get(0);
  final String sourceRegister1=(registerOperand1.getValue());
  final String sourceRegister2=(registerOperand2.getValue());
  final String sourceRegister3=(registerOperand3.getValue());
  final String sourceRegister4=(registerOperand4.getValue());
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String tmpVar1=environment.getNextVariableString();
  instructions.add(ReilHelpers.createMul(baseOffset++,dw,sourceRegister3,dw,sourceRegister4,qw,tmpVar1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,qw,tmpVar1,dw,String.valueOf(0xFFFFFFFFL),dw,sourceRegister1));
  instructions.add(ReilHelpers.createBsh(baseOffset++,qw,tmpVar1,wd,String.valueOf(-32L),dw,sourceRegister2));
  if (instruction.getMnemonic().endsWith("S") && (instruction.getMnemonic().length() != 7)) {
    final String isZero1=environment.getNextVariableString();
    final String isZero2=environment.getNextVariableString();
    instructions.add(ReilHelpers.createBsh(baseOffset++,dw,sourceRegister2,wd,String.valueOf(-31L),bt,"N"));
    instructions.add(ReilHelpers.createBisz(baseOffset++,dw,sourceRegister1,bt,isZero1));
    instructions.add(ReilHelpers.createBisz(baseOffset++,dw,sourceRegister2,bt,isZero2));
    instructions.add(ReilHelpers.createAnd(baseOffset++,bt,isZero1,bt,isZero2,bt,"Z"));
  }
}
