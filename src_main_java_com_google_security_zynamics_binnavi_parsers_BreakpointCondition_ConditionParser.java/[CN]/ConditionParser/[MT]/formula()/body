{
  final ConditionParser.formula_return retval=new ConditionParser.formula_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token B_OR13=null;
  ConditionParser.bxorExpression_return bxorExpression12=null;
  ConditionParser.bxorExpression_return bxorExpression14=null;
  Object B_OR13_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_bxorExpression_in_formula408);
      bxorExpression12=bxorExpression();
      state._fsp--;
      adaptor.addChild(root_0,bxorExpression12.getTree());
      loop3:       do {
        int alt3=2;
        final int LA3_0=input.LA(1);
        if ((LA3_0 == B_OR)) {
          alt3=1;
        }
switch (alt3) {
case 1:
{
            B_OR13=(Token)match(input,B_OR,FOLLOW_B_OR_in_formula411);
            B_OR13_tree=(Object)adaptor.create(B_OR13);
            root_0=(Object)adaptor.becomeRoot(B_OR13_tree,root_0);
            pushFollow(FOLLOW_bxorExpression_in_formula414);
            bxorExpression14=bxorExpression();
            state._fsp--;
            adaptor.addChild(root_0,bxorExpression14.getTree());
          }
        break;
default :
      break loop3;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (final RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
