{
  TranslationHelpers.checkTranslationArguments(environment,instruction,instructions,mnemonic);
  final IOperandTreeNode BOOperand=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode BIOperand=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final String[] meta=setLinkRegister ? new String[]{"isCall","true"} : new String[0];
  final String jumpOperand=environment.getNextVariableString();
  final String ctrDecrement1=toCTR ? null : environment.getNextVariableString();
  final String ctrDecrement2=toCTR ? null : environment.getNextVariableString();
  final String ctrDecrement3=toCTR ? null : environment.getNextVariableString();
  final String tmpCountRegister=toCTR ? null : environment.getNextVariableString();
  final String ctrIsZero=toCTR ? null : environment.getNextVariableString();
  final String ctrIsNotZero=toCTR ? null : environment.getNextVariableString();
  final String ctrCondition1=environment.getNextVariableString();
  final String ctrCondition2=environment.getNextVariableString();
  final String ctrCondition3=environment.getNextVariableString();
  final String ctrOk=toCTR ? String.valueOf(1L) : environment.getNextVariableString();
  final String condCondition1=environment.getNextVariableString();
  final String condCondition2=environment.getNextVariableString();
  final String condCondition3=environment.getNextVariableString();
  final String condCondition4=environment.getNextVariableString();
  final String condCondition5=environment.getNextVariableString();
  final String condOk=environment.getNextVariableString();
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  if (!toCTR) {
    instructions.add(ReilHelpers.createBsh(baseOffset++,dw,String.valueOf(BOOperand),bt,String.valueOf(-2L),dw,ctrDecrement1));
    instructions.add(ReilHelpers.createAnd(baseOffset++,dw,ctrDecrement1,dw,String.valueOf(1L),dw,ctrDecrement2));
    instructions.add(ReilHelpers.createBisz(baseOffset++,dw,ctrDecrement2,bt,ctrDecrement3));
    instructions.add(ReilHelpers.createSub(baseOffset++,dw,Helpers.COUNT_REGISTER,bt,ctrDecrement3,qw,tmpCountRegister));
    instructions.add(ReilHelpers.createAnd(baseOffset++,qw,tmpCountRegister,dw,String.valueOf(0xFFFFFFFFL),dw,Helpers.COUNT_REGISTER));
    instructions.add(ReilHelpers.createBisz(baseOffset++,dw,Helpers.COUNT_REGISTER,bt,ctrIsZero));
    instructions.add(ReilHelpers.createBisz(baseOffset++,bt,ctrIsZero,bt,ctrIsNotZero));
    instructions.add(ReilHelpers.createBsh(baseOffset++,dw,String.valueOf(BOOperand),bt,String.valueOf(-3L),dw,ctrCondition1));
    instructions.add(ReilHelpers.createAnd(baseOffset++,dw,ctrCondition1,dw,String.valueOf(1L),bt,ctrCondition2));
    instructions.add(ReilHelpers.createXor(baseOffset++,bt,ctrIsNotZero,bt,ctrCondition2,bt,ctrCondition3));
    instructions.add(ReilHelpers.createOr(baseOffset++,dw,ctrDecrement2,bt,ctrCondition3,bt,ctrOk));
  }
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,String.valueOf(BOOperand),dw,String.valueOf(-1L),dw,condCondition1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,condCondition1,dw,String.valueOf(1L),bt,condCondition2));
  instructions.add(ReilHelpers.createXor(baseOffset++,bt,Helpers.getCRBit(Integer.valueOf(String.valueOf(BIOperand))),bt,condCondition2,bt,condCondition3));
  instructions.add(ReilHelpers.createBisz(baseOffset++,bt,condCondition3,bt,condCondition4));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,String.valueOf(BOOperand),dw,String.valueOf(1L),bt,condCondition5));
  instructions.add(ReilHelpers.createOr(baseOffset++,bt,condCondition5,bt,condCondition4,bt,condOk));
  instructions.add(ReilHelpers.createAnd(baseOffset++,bt,ctrOk,bt,condOk,bt,jumpOperand));
  if (setLinkRegister) {
    instructions.add(ReilHelpers.createStr(baseOffset++,dw,String.valueOf(instruction.getAddress().toLong() + 4),dw,Helpers.LINK_REGISTER));
  }
  instructions.add(ReilHelpers.createJcc(baseOffset++,bt,jumpOperand,dw,addressOperand,meta));
}
