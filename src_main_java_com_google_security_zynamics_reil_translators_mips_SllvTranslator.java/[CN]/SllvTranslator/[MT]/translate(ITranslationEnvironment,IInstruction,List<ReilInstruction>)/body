{
  TranslationHelpers.checkTranslationArguments(environment,instruction,instructions,"sllv");
  final Triple<IOperandTree,IOperandTree,IOperandTree> operands=OperandLoader.loadDuplicateFirst(instruction);
  final String rd=operands.first().getRootNode().getChildren().get(0).getValue();
  final String rt=operands.second().getRootNode().getChildren().get(0).getValue();
  final String rs=operands.third().getRootNode().getChildren().get(0).getValue();
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  final String lowFiveShiftBits=environment.getNextVariableString();
  final String temporaryShiftResult=environment.getNextVariableString();
  final long baseOffset=ReilHelpers.toReilAddress(instruction.getAddress()).toLong();
  long offset=baseOffset;
  instructions.add(ReilHelpers.createAnd(offset++,dw,rs,dw,String.valueOf(0x1FL),dw,lowFiveShiftBits));
  instructions.add(ReilHelpers.createBsh(offset++,dw,rt,dw,lowFiveShiftBits,qw,temporaryShiftResult));
  instructions.add(ReilHelpers.createAnd(offset,qw,temporaryShiftResult,dw,String.valueOf(0xFFFFFFFFL),dw,rd));
}
