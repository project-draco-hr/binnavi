{
  final Matcher matcher=expressionTypeInstanceNotificationPattern.matcher(notification.getParameter());
  if (!matcher.find()) {
    throw new IllegalStateException("Error: compiled pattern: " + expressionTypeInstanceNotificationPattern.toString() + " did not match notification: "+ notification.getParameter());
  }
  final String databaseOperation=matcher.group(2);
  final Integer moduleId=Integer.parseInt(matcher.group(3));
  final BigInteger address=new BigInteger(matcher.group(4));
  final Integer position=Integer.parseInt(matcher.group(5));
  final Integer expressionId=Integer.parseInt(matcher.group(6));
  final Integer typeInstanceId=Integer.parseInt(matcher.group(7));
  return new TypeInstancesNotificationContainer(databaseOperation,moduleId,typeInstanceId,Optional.of(address),Optional.of(position),Optional.of(expressionId));
}
