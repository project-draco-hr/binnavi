{
  final MockSqlProvider provider=new MockSqlProvider();
  final CModule internalModule=new CModule(1,"","",new Date(),new Date(),"00000000000000000000000000000000","0000000000000000000000000000000000000000",0,0,new CAddress(0),new CAddress(0),null,null,Integer.MAX_VALUE,false,provider);
  final CFunction parentFunction=new CFunction(internalModule,new MockView(),new CAddress(0x123),"Mock Function","Mock Function","Mock Description",0,0,0,0,FunctionType.NORMAL,"",0,null,null,null,provider);
  final List<INaviInstruction> instructions=new ArrayList<INaviInstruction>();
  instructions.add(new MockInstruction(0x123));
  final INaviBasicBlock bblock=new CBasicBlock(1,"Hannes",instructions);
  final IBlockNode node=new CBlockNode(bblock);
  final Function pFunction=new Function(ModuleFactory.get(),parentFunction);
  final BasicBlock block1=new BasicBlock(node,pFunction);
  final BasicBlock block2=new BasicBlock(node,pFunction);
  final IBlockEdge mockEdge=new CFunctionEdge(node,node,com.google.security.zynamics.zylib.gui.zygraph.edges.EdgeType.JUMP_UNCONDITIONAL);
  final BlockEdge edge=new BlockEdge(mockEdge,block1,block2);
  assertEquals(block1,edge.getSource());
  assertEquals(block2,edge.getTarget());
  assertEquals(block1,block2.getParents().get(0));
  assertEquals(block2,block1.getChildren().get(0));
  assertEquals(EdgeType.JumpUnconditional,edge.getType());
  assertEquals("Block Edge [123 -> 123]",edge.toString());
}
