{
  final INaviTextNode textNode=setupTextNode();
  final IUser user=new UniqueTestUserGenerator(getProvider()).nextActiveUser();
  final String firstCommentString=" APPEND GROUP NODE COMMENT WITHOUT PARENT ID ";
  final Integer firstCommentId=getProvider().appendTextNodeComment(textNode,firstCommentString,user.getUserId());
  final IComment firstComment=new CComment(firstCommentId,user,null,firstCommentString);
  final String secondCommentString=" APPEND GROUP NODE COMMENT WITH PARENT ID ";
  final Integer secondCommentId=getProvider().appendTextNodeComment(textNode,secondCommentString,user.getUserId());
  final IComment secondComment=new CComment(secondCommentId,user,firstComment,secondCommentString);
  final ArrayList<IComment> commentsFromDatabase=getProvider().loadCommentById(secondCommentId);
  assertNotNull(commentsFromDatabase);
  assertEquals(2,commentsFromDatabase.size());
  assertTrue(commentsFromDatabase.contains(firstComment));
  assertTrue(commentsFromDatabase.contains(secondComment));
  globalView.close();
  globalView.load();
  INaviTextNode savedTextNode;
  for (  final INaviViewNode node : globalView.getGraph().getNodes()) {
    if (node instanceof INaviTextNode) {
      savedTextNode=(INaviTextNode)node;
      assertNotNull(savedTextNode.getComments());
      assertEquals(2,(savedTextNode.getComments().size()));
      assertTrue(savedTextNode.getComments().contains(firstComment));
      assertTrue(savedTextNode.getComments().contains(secondComment));
    }
  }
}
