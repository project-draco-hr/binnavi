{
  super(parent,"Select IDB files for importing",true);
  new CDialogEscaper(this);
  final JPanel upperPanel=new JPanel(new GridBagLayout());
  final GridBagConstraints constraints=new GridBagConstraints();
  final JLabel availableExportersLabel=new JLabel("Available Exporters" + ":");
  availableExportersLabel.setBorder(new EmptyBorder(10,5,10,5));
  constraints.anchor=GridBagConstraints.FIRST_LINE_START;
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.weightx=1;
  constraints.weighty=1;
  upperPanel.add(availableExportersLabel,constraints);
  m_exportersBox=new JComboBox<Object>(new Object[]{"BinExport IDA plugin"});
  m_exportersBox.setBorder(new EmptyBorder(10,5,10,5));
  constraints.gridx=1;
  constraints.gridy=0;
  constraints.weightx=5;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  upperPanel.add(m_exportersBox,constraints);
  final JLabel previousDirectoriesLabel=new JLabel("Previous directories" + ":");
  previousDirectoriesLabel.setBorder(new EmptyBorder(10,5,10,5));
  constraints.gridx=0;
  constraints.gridy=1;
  constraints.weightx=1;
  constraints.fill=GridBagConstraints.NONE;
  upperPanel.add(previousDirectoriesLabel,constraints);
  m_previousDirectoryBox=new CPreviousDirectoriesBox(previousDirectories);
  m_previousDirectoryBox.setBorder(new EmptyBorder(10,5,10,5));
  m_previousDirectoryBox.addItemListener(new InternalItemListener());
  constraints.gridx=1;
  constraints.gridy=1;
  constraints.weightx=5;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  upperPanel.add(m_previousDirectoryBox,constraints);
  final JLabel parallelImportsLabel=new JLabel("Number of parallel imports" + ":");
  parallelImportsLabel.setBorder(new EmptyBorder(10,5,10,5));
  constraints.anchor=GridBagConstraints.FIRST_LINE_START;
  constraints.gridx=0;
  constraints.gridy=2;
  constraints.weightx=1;
  constraints.weighty=1;
  upperPanel.add(parallelImportsLabel,constraints);
  final JPanel innerPanel=new JPanel(new BorderLayout());
  m_threadsSlider=new JSlider(JSlider.HORIZONTAL,1,20,3);
  m_threadsSlider.setPaintLabels(true);
  m_threadsSlider.setPaintTicks(true);
  m_threadsSlider.setPaintTrack(true);
  m_threadsSlider.setMajorTickSpacing(1);
  m_threadsSlider.setSnapToTicks(true);
  m_threadsSlider.setBorder(new EmptyBorder(10,5,10,5));
  innerPanel.add(m_threadsSlider);
  constraints.gridx=1;
  constraints.gridy=2;
  constraints.weightx=5;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  upperPanel.add(innerPanel,constraints);
  final JPanel leftMiddlePanel=new JPanel(new BorderLayout());
  m_chooser=new JFileChooser(){
    /** 
 * Used for serialization.
 */
    private static final long serialVersionUID=4054469348978937674L;
    @Override public void approveSelection(){
      if (!updateSelectedExporter()) {
        return;
      }
      m_selectedFiles.add(m_chooser.getSelectedFile());
      CIdbSelectionDialog.this.dispose();
    }
    @Override public void cancelSelection(){
      CIdbSelectionDialog.this.dispose();
    }
  }
;
  m_chooser.setControlButtonsAreShown(false);
  m_chooser.setFileFilter(new CIdbFileFilter());
  m_chooser.setMultiSelectionEnabled(true);
  if (!previousDirectories.isEmpty()) {
    final File file=new File(previousDirectories.get(0));
    if (file.exists() && file.isDirectory()) {
      m_chooser.setCurrentDirectory(file);
    }
  }
  leftMiddlePanel.add(m_chooser);
  leftMiddlePanel.setBorder(new TitledBorder("Select IDB Files"));
  final JPanel rightPanel=new JPanel(new BorderLayout());
  final JPanel centerButtonPanel=new JPanel();
  centerButtonPanel.setLayout(new BoxLayout(centerButtonPanel,BoxLayout.LINE_AXIS));
  final JPanel innerCenterButtonPanel=new JPanel();
  innerCenterButtonPanel.setLayout(new BoxLayout(innerCenterButtonPanel,BoxLayout.PAGE_AXIS));
  centerButtonPanel.add(innerCenterButtonPanel);
  final JButton addButton=new JButton(new CAddFilesAction());
  final JButton removeButton=new JButton(new CRemoveFilesAction());
  innerCenterButtonPanel.add(addButton);
  innerCenterButtonPanel.add(Box.createVerticalStrut(15));
  innerCenterButtonPanel.add(removeButton);
  innerCenterButtonPanel.setBorder(new EmptyBorder(0,0,0,5));
  rightPanel.add(centerButtonPanel,BorderLayout.WEST);
  final JPanel listPanel=new JPanel(new BorderLayout());
  listPanel.add(new JScrollPane(m_selectionList));
  listPanel.setBorder(new TitledBorder("Selected IDB Files"));
  rightPanel.add(listPanel);
  rightPanel.setBorder(new EmptyBorder(0,5,0,5));
  final JPanel middlePanel=new JPanel(new BorderLayout());
  middlePanel.add(leftMiddlePanel,BorderLayout.WEST);
  middlePanel.add(rightPanel);
  final JPanel lowerPanel=new JPanel(new BorderLayout());
  final CPanelTwoButtons buttonPanel=new CPanelTwoButtons(new InternalActionListener(),"Cancel","Import");
  lowerPanel.add(buttonPanel,BorderLayout.EAST);
  add(upperPanel,BorderLayout.NORTH);
  add(middlePanel,BorderLayout.CENTER);
  add(lowerPanel,BorderLayout.SOUTH);
  setSize(800,600);
}
