{
  final TargetProcessThread thread=new TargetProcessThread(0x666,ThreadState.RUNNING);
  final MemoryModule module=new MemoryModule("narf.exe","C:\\zort\\narf.exe",new RelocatedAddress(new CAddress(0x1000)),123345);
  final MockDebugger debugger=new MockDebugger(new ModuleTargetSettings(CommonTestObjects.MODULE));
  debugger.connect();
  debugger.connection.m_synchronizer.receivedEvent(new TargetInformationReply(0,0,new TargetInformation(32,new FilledList<RegisterDescription>(),new DebuggerOptions(false,false,false,false,false,true,false,false,false,false,1,0,new ArrayList<DebuggerException>(),false,false,false))));
  debugger.connection.m_synchronizer.receivedEvent(new ProcessStartReply(0,0,new ProcessStart(thread,module)));
  final MockDebugger debugger2=new MockDebugger(new ModuleTargetSettings(CommonTestObjects.MODULE));
  debugger2.connect();
  debugger2.connection.m_synchronizer.receivedEvent(new TargetInformationReply(0,0,new TargetInformation(32,new FilledList<RegisterDescription>(),new DebuggerOptions(false,false,false,false,false,false,false,false,false,false,1,0,new ArrayList<DebuggerException>(),false,false,false))));
  debugger2.connection.m_synchronizer.receivedEvent(new ProcessStartReply(0,0,new ProcessStart(thread,module)));
  m_model.setActiveDebugger(debugger);
  debugger.getProcessManager().setActiveThread(thread);
  assertTrue(m_refreshButton.isEnabled());
  assertEquals(m_defaultAction,m_refreshButton.getAction());
  m_model.setActiveDebugger(debugger2);
  debugger2.getProcessManager().setActiveThread(thread);
  assertTrue(m_refreshButton.isEnabled());
  assertEquals(m_askAction,m_refreshButton.getAction());
  m_synchronizer.dispose();
  debugger.close();
  debugger2.close();
}
