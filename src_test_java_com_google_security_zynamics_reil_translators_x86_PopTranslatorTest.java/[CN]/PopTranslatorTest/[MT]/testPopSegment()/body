{
  interpreter.setRegister("esp",BigInteger.valueOf(0x2000),OperandSize.DWORD,ReilRegisterStatus.DEFINED);
  interpreter.setMemory(0x2000,0x123,4);
  final MockOperandTree operandTree=new MockOperandTree();
  operandTree.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"word");
  operandTree.root.m_children.add(new MockOperandTreeNode(ExpressionType.REGISTER,"ds"));
  final List<MockOperandTree> operands=Lists.newArrayList(operandTree);
  final IInstruction instruction=new MockInstruction("pop",operands);
  translator.translate(environment,instruction,instructions);
  interpreter.interpret(TestHelpers.createMapping(instructions),BigInteger.valueOf(0x100));
  assertEquals(BigInteger.valueOf(0x2002),interpreter.getVariableValue("esp"));
  assertEquals(3,TestHelpers.filterNativeRegisters(interpreter.getDefinedRegisters()).size());
  assertEquals(BigInteger.valueOf(0x123L),interpreter.getVariableValue("ds"));
}
