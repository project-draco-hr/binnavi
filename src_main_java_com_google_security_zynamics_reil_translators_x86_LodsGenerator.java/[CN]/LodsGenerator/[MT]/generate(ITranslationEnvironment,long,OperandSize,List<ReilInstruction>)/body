{
  Preconditions.checkNotNull(environment,"Error: Argument environment can't be null");
  Preconditions.checkNotNull(instructions,"Error: Argument instructions can't be null");
  long offset=baseOffset;
  final int previousInstructions=(int)(baseOffset % 0x100);
  final OperandSize archSize=environment.getArchitectureSize();
  final OperandSize resultSize=TranslationHelpers.getNextSize(operandSize);
  final String ediChange=String.valueOf(operandSize.getByteSize());
  final String truncateMask=String.valueOf(TranslationHelpers.getAllBitsMask(archSize));
  if (operandSize == archSize) {
    instructions.add(ReilHelpers.createLdm(offset++,archSize,"esi",archSize,"eax"));
  }
 else {
    final String tempLoad=environment.getNextVariableString();
    final String maskedEax=environment.getNextVariableString();
    final String mask=String.valueOf(TranslationHelpers.getAllButMask(archSize,operandSize));
    instructions.add(ReilHelpers.createLdm(offset++,archSize,"esi",operandSize,tempLoad));
    instructions.add(ReilHelpers.createAnd(offset++,archSize,"eax",archSize,mask,archSize,maskedEax));
    instructions.add(ReilHelpers.createOr(offset++,operandSize,tempLoad,archSize,maskedEax,archSize,"eax"));
  }
  final String tempEsi1=environment.getNextVariableString();
  final String tempEsi2=environment.getNextVariableString();
  final int linesBefore=instructions.size();
  final String jmpGoal=String.format("%d.%d",ReilHelpers.toNativeAddress(new CAddress(baseOffset)).toLong(),previousInstructions + linesBefore + 4);
  instructions.add(ReilHelpers.createJcc(offset++,OperandSize.BYTE,Helpers.DIRECTION_FLAG,OperandSize.ADDRESS,jmpGoal));
  instructions.add(ReilHelpers.createAdd(offset++,archSize,"esi",archSize,ediChange,resultSize,tempEsi1));
  instructions.add(ReilHelpers.createAnd(offset++,resultSize,tempEsi1,operandSize,truncateMask,operandSize,"esi"));
  final String jmpGoal2=String.format("%d.%d",ReilHelpers.toNativeAddress(new CAddress(baseOffset)).toLong(),previousInstructions + linesBefore + 6);
  instructions.add(ReilHelpers.createJcc(offset++,OperandSize.BYTE,"1",OperandSize.ADDRESS,jmpGoal2));
  instructions.add(ReilHelpers.createSub(offset++,archSize,"esi",archSize,ediChange,resultSize,tempEsi2));
  instructions.add(ReilHelpers.createAnd(offset++,resultSize,tempEsi2,operandSize,truncateMask,operandSize,"esi"));
  instructions.add(ReilHelpers.createNop(offset));
}
