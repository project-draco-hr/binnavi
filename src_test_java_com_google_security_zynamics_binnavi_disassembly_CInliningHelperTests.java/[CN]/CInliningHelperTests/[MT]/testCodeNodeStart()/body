{
  final CInstruction instruction1=MockCreator.createInstructionWithOperand(new BigInteger("1234"),m_module,m_sql);
  final CInstruction instruction2=MockCreator.createInstructionWithOperand(new BigInteger("1235"),m_module,m_sql);
  final CInstruction instruction3=MockCreator.createInstructionWithOperand(new BigInteger("1236"),m_module,m_sql);
  final INaviCodeNode codeNode1=m_view.getContent().createCodeNode(m_function,Lists.newArrayList(instruction1,instruction2,instruction3));
  final INaviCodeNode codeNode2=m_view.getContent().createCodeNode(m_function,Lists.newArrayList(instruction1,instruction2,instruction3));
  final INaviCodeNode codeNode3=m_view.getContent().createCodeNode(m_function,Lists.newArrayList(instruction1,instruction2,instruction3));
  m_view.getContent().createEdge(codeNode1,codeNode2,EdgeType.JUMP_CONDITIONAL_TRUE);
  m_view.getContent().createEdge(codeNode2,codeNode3,EdgeType.JUMP_CONDITIONAL_FALSE);
  CInliningHelper.inlineCodeNode(m_view,codeNode2,Iterables.get(codeNode2.getInstructions(),0),m_function);
  assertEquals(2 + 1 + 5+ 1,m_view.getNodeCount());
  final List<INaviViewNode> blocks=m_view.getGraph().getNodes();
  final INaviCodeNode startNode=(INaviCodeNode)findStartNode(blocks);
  assertEquals(1,Iterables.size(startNode.getInstructions()));
  assertEquals(instruction1,Iterables.get(startNode.getInstructions(),0));
  assertEquals(1,startNode.getIncomingEdges().size());
  assertEquals(EdgeType.JUMP_CONDITIONAL_TRUE,startNode.getIncomingEdges().get(0).getType());
  assertEquals(1,startNode.getOutgoingEdges().size());
  assertEquals(EdgeType.ENTER_INLINED_FUNCTION,startNode.getOutgoingEdges().get(0).getType());
  final INaviViewNode firstInlinedNode=startNode.getOutgoingEdges().get(0).getTarget();
  assertEquals(m_function.getAddress(),Iterables.get(((INaviCodeNode)firstInlinedNode).getInstructions(),0).getAddress());
  assertEquals(1,firstInlinedNode.getIncomingEdges().size());
  assertEquals(1,firstInlinedNode.getOutgoingEdges().size());
  final INaviViewNode middleInlinedNode=firstInlinedNode.getOutgoingEdges().get(0).getTarget();
  assertEquals(2,middleInlinedNode.getIncomingEdges().size());
  assertEquals(2,middleInlinedNode.getOutgoingEdges().size());
  final INaviViewNode firstReturnNode=middleInlinedNode.getOutgoingEdges().get(0).getTarget();
  final INaviViewNode secondReturnNode=middleInlinedNode.getOutgoingEdges().get(1).getTarget();
  assertEquals(1,firstReturnNode.getIncomingEdges().size());
  assertEquals(1,firstReturnNode.getOutgoingEdges().size());
  assertEquals(EdgeType.LEAVE_INLINED_FUNCTION,firstReturnNode.getOutgoingEdges().get(0).getType());
  assertEquals(1,secondReturnNode.getIncomingEdges().size());
  assertEquals(1,secondReturnNode.getOutgoingEdges().size());
  assertEquals(EdgeType.LEAVE_INLINED_FUNCTION,secondReturnNode.getOutgoingEdges().get(0).getType());
}
