{
  TranslationHelpers.checkTranslationArguments(environment,instruction,instructions,mnemonic);
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final String targetRegister=registerOperand1.getValue();
  final String sourceRegister=registerOperand2.getValue();
  final String tmpVar1=environment.getNextVariableString();
  final String tmpVar2=environment.getNextVariableString();
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize bt=OperandSize.BYTE;
  if (opSize == bt) {
    instructions.add(ReilHelpers.createAdd(baseOffset++,dw,sourceRegister,dw,String.valueOf(0x00000080),dw,tmpVar1));
    instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpVar1,dw,String.valueOf(0x000000FFL),dw,tmpVar2));
    instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpVar2,dw,String.valueOf(0x00000080L),dw,targetRegister));
  }
 else {
    instructions.add(ReilHelpers.createAdd(baseOffset++,dw,sourceRegister,dw,String.valueOf(0x00008000),dw,tmpVar1));
    instructions.add(ReilHelpers.createAnd(baseOffset++,dw,tmpVar1,dw,String.valueOf(0x0000FFFFL),dw,tmpVar2));
    instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpVar2,dw,String.valueOf(0x00008000L),dw,targetRegister));
  }
  if (setCr) {
    final String crTemp=environment.getNextVariableString();
    instructions.add(ReilHelpers.createBisz(baseOffset++,OperandSize.DWORD,targetRegister,OperandSize.BYTE,Helpers.CR0_EQUAL));
    instructions.add(ReilHelpers.createBsh(baseOffset++,OperandSize.DWORD,targetRegister,OperandSize.WORD,"-31",OperandSize.BYTE,Helpers.CR0_LESS_THEN));
    instructions.add(ReilHelpers.createOr(baseOffset++,OperandSize.BYTE,Helpers.CR0_EQUAL,OperandSize.BYTE,Helpers.CR0_LESS_THEN,OperandSize.BYTE,crTemp));
    instructions.add(ReilHelpers.createBisz(baseOffset++,OperandSize.BYTE,crTemp,OperandSize.BYTE,Helpers.CR0_GREATER_THEN));
    instructions.add(ReilHelpers.createStr(baseOffset,OperandSize.BYTE,Helpers.XER_SUMMARY_OVERFLOW,OperandSize.BYTE,Helpers.CRO_SUMMARY_OVERFLOW));
  }
}
