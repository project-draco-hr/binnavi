{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String sourceRegister2=(registerOperand3.getValue());
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize wd=OperandSize.WORD;
  final long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  new Processor(){
    @Override protected String[] process(    final long offset,    final String[] firstTwo,    final String[] secondTwo){
      final String sum1=environment.getNextVariableString();
      final String sum2=environment.getNextVariableString();
      final String tmpVar1=environment.getNextVariableString();
      final String tmpVar2=environment.getNextVariableString();
      long baseOffset=offset;
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstTwo[0],dw,secondTwo[0],dw,sum1));
      instructions.add(ReilHelpers.createAdd(baseOffset++,dw,firstTwo[1],dw,secondTwo[1],dw,sum2));
      instructions.add(ReilHelpers.createXor(baseOffset++,dw,sum1,dw,String.valueOf(0xFFFFFFFFL),dw,tmpVar1));
      instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar1,wd,String.valueOf(-31),bt,"CPSR_GE_0"));
      instructions.add(ReilHelpers.createStr(baseOffset++,bt,"CPSR_GE_0",bt,"CPSR_GE_1"));
      instructions.add(ReilHelpers.createXor(baseOffset++,dw,sum2,dw,String.valueOf(0xFFFFFFFFL),dw,tmpVar2));
      instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar2,wd,String.valueOf(-31),bt,"CPSR_GE_2"));
      instructions.add(ReilHelpers.createStr(baseOffset++,bt,"CPSR_GE_2",bt,"CPSR_GE_3"));
      return new String[]{sum1,sum2};
    }
  }
.generate(environment,baseOffset,16,sourceRegister1,sourceRegister2,targetRegister,instructions);
}
