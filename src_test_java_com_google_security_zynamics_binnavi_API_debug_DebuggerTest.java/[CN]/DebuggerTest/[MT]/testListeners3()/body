{
  mockDebugger.connect();
  mockDebugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  mockDebugger.getProcessManager().getThread(0).setCurrentAddress(new RelocatedAddress(new CAddress(0)));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ResumeThreadReply(0,0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ResumeThreadReply(0,1,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SearchReply(0,0,new CAddress(0)));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SearchReply(0,1,null));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SelectFileReply(0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SelectFileReply(0,1));
  mockDebugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  mockDebugger.getProcessManager().getThread(0).setCurrentAddress(new RelocatedAddress(new CAddress(0)));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SetRegisterReply(0,0,0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SetRegisterReply(0,1,0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SingleStepReply(0,0,0,new RelocatedAddress(new CAddress(0)),new RegisterValues(new FilledList<ThreadRegisters>())));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SingleStepReply(0,1,0,new RelocatedAddress(new CAddress(0)),new RegisterValues(new FilledList<ThreadRegisters>())));
  mockDebugger.connection.m_synchronizer.receivedEvent(new StepBreakpointHitReply(0,0,1,new RegisterValues(Lists.<ThreadRegisters>newArrayList(new ThreadRegisters(1,Lists.newArrayList(new RegisterValue("eip",BigInteger.ONE,new byte[0],false,false)))))));
  mockDebugger.connection.m_synchronizer.receivedEvent(new StepBreakpointHitReply(0,0,1,new RegisterValues(Lists.<ThreadRegisters>newArrayList(new ThreadRegisters(1,Lists.newArrayList(new RegisterValue("eip",BigInteger.ONE,new byte[0],true,false)))))));
  mockDebugger.getBreakpointManager().addBreakpoints(BreakpointType.STEP,CommonTestObjects.BP_ADDRESS_123_SET);
  mockDebugger.connection.m_synchronizer.receivedEvent(new StepBreakpointSetReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(CommonTestObjects.BP_ADDRESS_123_RELOC,0))));
  mockDebugger.connection.m_synchronizer.receivedEvent(new StepBreakpointSetReply(0,1,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(CommonTestObjects.BP_ADDRESS_123_RELOC,1))));
  mockDebugger.connection.m_synchronizer.receivedEvent(new StepBreakpointsRemovedReply(0,0,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(CommonTestObjects.BP_ADDRESS_123_RELOC,0))));
  mockDebugger.connection.m_synchronizer.receivedEvent(new StepBreakpointsRemovedReply(0,1,Lists.newArrayList(new Pair<RelocatedAddress,Integer>(CommonTestObjects.BP_ADDRESS_123_RELOC,1))));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SuspendThreadReply(0,0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new SuspendThreadReply(0,1,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new TargetInformationReply(0,0,TargetInformationParser.parse("<foo><size>32</size><registers></registers><options></options></foo>".getBytes())));
  mockDebugger.connection.m_synchronizer.receivedEvent(new TargetInformationReply(0,1,null));
  mockDebugger.getProcessManager().addThread(new TargetProcessThread(0,ThreadState.RUNNING));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ThreadClosedReply(0,0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ThreadClosedReply(0,1,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ThreadCreatedReply(0,0,0,ThreadState.RUNNING));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ThreadCreatedReply(0,1,0,null));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ValidateMemoryReply(0,0,new CAddress(0),new CAddress(0)));
  mockDebugger.connection.m_synchronizer.receivedEvent(new ValidateMemoryReply(0,1,null,null));
  mockDebugger.connection.m_synchronizer.receivedEvent(new WriteMemoryReply(0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new WriteMemoryReply(0,1));
  mockDebugger.connection.m_synchronizer.receivedEvent(new TerminateReply(0,0));
  mockDebugger.connection.m_synchronizer.receivedEvent(new TerminateReply(0,1));
}
