{
  interpreter.setMemory(0,1,4);
  final MockOperandTree operandTree1=new MockOperandTree();
  operandTree1.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"dword");
  operandTree1.root.m_children.add(new MockOperandTreeNode(ExpressionType.MEMDEREF,"["));
  operandTree1.root.m_children.get(0).getChildren().add(new MockOperandTreeNode(ExpressionType.IMMEDIATE_INTEGER,"0"));
  final MockOperandTree operandTree2=new MockOperandTree();
  operandTree2.root=new MockOperandTreeNode(ExpressionType.SIZE_PREFIX,"dword");
  operandTree2.root.m_children.add(new MockOperandTreeNode(ExpressionType.IMMEDIATE_INTEGER,"0"));
  final List<MockOperandTree> operands=Lists.newArrayList(operandTree1,operandTree2);
  final IInstruction instruction=new MockInstruction("btr",operands);
  translator.translate(environment,instruction,instructions);
  interpreter.interpret(TestHelpers.createMapping(instructions),BigInteger.valueOf(0x100));
  assertEquals(2,TestHelpers.filterNativeRegisters(interpreter.getDefinedRegisters()).size());
  assertEquals(BigInteger.valueOf(1),interpreter.getVariableValue("CF"));
  assertEquals(0,interpreter.getMemory().load(0,4));
  assertEquals(BigInteger.valueOf(4L),BigInteger.valueOf(interpreter.getMemorySize()));
}
