{
  final SQLProvider provider=new MockSqlProvider();
  final CModule internalModule=new CModule(123,"Name","Comment",new Date(),new Date(),"12345678123456781234567812345678","1234567812345678123456781234567812345678",55,66,new CAddress(0x555),new CAddress(0x666),new DebuggerTemplate(1,"Mock Debugger","localhaus",88,provider),null,Integer.MAX_VALUE,false,provider);
  internalModule.load();
  final COperandTreeNode rootNode1=new COperandTreeNode(1,IOperandTree.NODE_TYPE_REGISTER_ID,"eax",null,new ArrayList<IReference>(),provider,internalModule.getTypeManager(),internalModule.getContent().getTypeInstanceContainer());
  final COperandTreeNode rootNode2=new COperandTreeNode(1,IOperandTree.NODE_TYPE_REGISTER_ID,"ebx",null,new ArrayList<IReference>(),provider,internalModule.getTypeManager(),internalModule.getContent().getTypeInstanceContainer());
  final COperandTree operand1=new COperandTree(rootNode1,provider,internalModule.getTypeManager(),internalModule.getContent().getTypeInstanceContainer());
  final COperandTree operand2=new COperandTree(rootNode2,provider,internalModule.getTypeManager(),internalModule.getContent().getTypeInstanceContainer());
  final List<COperandTree> operands=Lists.newArrayList(operand1,operand2);
  final CInstruction internalInstruction=new CInstruction(false,internalModule,new CAddress(0x123),"mov",operands,new byte[]{1,2,3},"x86-32",provider);
  final Instruction instruction=new Instruction(internalInstruction);
  instruction.getReilCode();
}
