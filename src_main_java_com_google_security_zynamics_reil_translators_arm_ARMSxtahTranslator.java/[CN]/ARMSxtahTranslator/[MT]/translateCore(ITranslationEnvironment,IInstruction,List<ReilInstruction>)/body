{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode shifter=instruction.getOperands().get(2).getRootNode();
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister=(registerOperand2.getValue());
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String tmpOperand2from15to0=environment.getNextVariableString();
  final String tmpOperand2from15to0signExtended=environment.getNextVariableString();
  final String tmpVar1=environment.getNextVariableString();
  final Pair<String,String> shifterPair=AddressingModeOneGenerator.generate(baseOffset,environment,instruction,instructions,shifter);
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  final String shifterOperand=shifterPair.first();
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,shifterOperand,wd,String.valueOf(0xFFFFL),dw,tmpOperand2from15to0));
  Helpers.signExtend(baseOffset,environment,instruction,instructions,dw,tmpOperand2from15to0,dw,tmpOperand2from15to0signExtended,16);
  baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  instructions.add(ReilHelpers.createAdd(baseOffset++,dw,sourceRegister,dw,tmpOperand2from15to0signExtended,qw,tmpVar1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,qw,tmpVar1,dw,String.valueOf(0xFFFFFFFFL),dw,targetRegister));
}
