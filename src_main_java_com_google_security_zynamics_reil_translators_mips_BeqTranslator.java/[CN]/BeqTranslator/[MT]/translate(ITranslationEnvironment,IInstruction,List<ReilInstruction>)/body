{
  TranslationHelpers.checkTranslationArguments(environment,instruction,instructions,"beq");
  final List<? extends IOperandTree> operands=instruction.getOperands();
  final String rs=operands.get(0).getRootNode().getChildren().get(0).getValue();
  final String rt=operands.get(1).getRootNode().getChildren().get(0).getValue();
  final IOperandTreeNode target=operands.get(2).getRootNode().getChildren().get(0);
  final long baseOffset=ReilHelpers.toReilAddress(instruction.getAddress()).toLong();
  long offset=baseOffset;
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize qw=OperandSize.QWORD;
  final String subtractedValue=environment.getNextVariableString();
  final String flippedValue=environment.getNextVariableString();
  instructions.add(ReilHelpers.createSub(offset++,dw,rs,dw,rt,qw,subtractedValue));
  instructions.add(ReilHelpers.createBisz(offset++,qw,subtractedValue,qw,flippedValue));
  Helpers.generateDelayBranch(instructions,offset,qw,flippedValue,dw,target);
}
