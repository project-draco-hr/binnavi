{
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand2=instruction.getOperands().get(1).getRootNode().getChildren().get(0);
  final IOperandTreeNode registerOperand3=instruction.getOperands().get(2).getRootNode().getChildren().get(0);
  final String targetRegister=(registerOperand1.getValue());
  final String sourceRegister1=(registerOperand2.getValue());
  final String sourceRegister2=(registerOperand3.getValue());
  final OperandSize bt=OperandSize.BYTE;
  final OperandSize wd=OperandSize.WORD;
  final OperandSize dw=OperandSize.DWORD;
  long baseOffset=(instruction.getAddress().toLong() * 0x100) + instructions.size();
  final String diff1=environment.getNextVariableString();
  final String diff2=environment.getNextVariableString();
  final String diff3=environment.getNextVariableString();
  final String diff4=environment.getNextVariableString();
  final String tmpRm15to8=environment.getNextVariableString();
  final String tmpRm23to16=environment.getNextVariableString();
  final String tmpRm31to24=environment.getNextVariableString();
  final String tmpRm7to0=environment.getNextVariableString();
  final String tmpRn15to8=environment.getNextVariableString();
  final String tmpRn23to16=environment.getNextVariableString();
  final String tmpRn31to24=environment.getNextVariableString();
  final String tmpRn7to0=environment.getNextVariableString();
  final String tmpVar1=environment.getNextVariableString();
  final String tmpVar2=environment.getNextVariableString();
  final String tmpVar3=environment.getNextVariableString();
  final String tmpVar4=environment.getNextVariableString();
  final String tmpVar5=environment.getNextVariableString();
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,dw,String.valueOf(0x000000FFL),dw,tmpRn7to0));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,dw,String.valueOf(0x0000FF00L),dw,tmpVar1));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar1,dw,String.valueOf(-8),dw,tmpRn15to8));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,dw,String.valueOf(0x00FF0000L),dw,tmpVar2));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar2,dw,String.valueOf(-16),dw,tmpRn23to16));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,dw,String.valueOf(0xFF000000L),dw,tmpVar3));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar3,dw,String.valueOf(-24),dw,tmpRn31to24));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister2,dw,String.valueOf(0x000000FFL),dw,tmpRm7to0));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister2,dw,String.valueOf(0x0000FF00L),dw,tmpVar1));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar1,dw,String.valueOf(-8),dw,tmpRm15to8));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister2,dw,String.valueOf(0x00FF0000L),dw,tmpVar2));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar2,dw,String.valueOf(-16),dw,tmpRm23to16));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister2,dw,String.valueOf(0xFF000000L),dw,tmpVar3));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,tmpVar3,dw,String.valueOf(-24),dw,tmpRm31to24));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpRn7to0,dw,tmpRm7to0,dw,diff1));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpRn15to8,dw,tmpRm15to8,dw,diff2));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpRn23to16,dw,tmpRm23to16,dw,diff3));
  instructions.add(ReilHelpers.createSub(baseOffset++,dw,tmpRn31to24,dw,tmpRm31to24,dw,diff4));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff1,wd,String.valueOf(-7),bt,"CPSR_GE_0"));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff2,wd,String.valueOf(-7),bt,"CPSR_GE_1"));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff3,wd,String.valueOf(-7),bt,"CPSR_GE_2"));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff4,wd,String.valueOf(-7),bt,"CPSR_GE_3"));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff2,dw,String.valueOf(8),dw,diff2));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff3,dw,String.valueOf(16),dw,diff3));
  instructions.add(ReilHelpers.createBsh(baseOffset++,dw,diff4,dw,String.valueOf(24),dw,diff4));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,diff1,dw,String.valueOf(0x000000FFL),dw,diff1));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,diff2,dw,String.valueOf(0x0000FF00L),dw,diff2));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,diff3,dw,String.valueOf(0x00FF0000L),dw,diff3));
  instructions.add(ReilHelpers.createAnd(baseOffset++,dw,diff4,dw,String.valueOf(0xFF000000L),dw,diff4));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,diff1,dw,diff2,dw,tmpVar4));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,diff3,dw,diff4,dw,tmpVar5));
  instructions.add(ReilHelpers.createOr(baseOffset++,dw,tmpVar4,dw,tmpVar5,dw,targetRegister));
}
