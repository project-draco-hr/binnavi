{
  final List<FunctionBlock> nodes=new ArrayList<FunctionBlock>();
  final MockSqlProvider provider=new MockSqlProvider();
  final CModule internalModule=new CModule(1,"","",new Date(),new Date(),"00000000000000000000000000000000","0000000000000000000000000000000000000000",0,0,new CAddress(0),new CAddress(0),null,null,Integer.MAX_VALUE,false,provider);
  final CFunction parentFunction=new CFunction(internalModule,new MockView(),new CAddress(0x123),"Mock Function","Mock Function","Mock Description",0,0,0,0,FunctionType.NORMAL,"",0,null,null,null,provider);
  final FunctionBlock b1=new FunctionBlock(new Function(ModuleFactory.get(),parentFunction));
  final FunctionBlock b2=new FunctionBlock(new Function(ModuleFactory.get(),parentFunction));
  nodes.add(b1);
  nodes.add(b2);
  final List<FunctionEdge> edges=new ArrayList<FunctionEdge>();
  final FunctionEdge e1=new FunctionEdge(b1,b2);
  edges.add(e1);
  final Callgraph cg=new Callgraph(nodes,edges);
  assertEquals(2,cg.getNodes().size());
  assertEquals(b1,cg.getNodes().get(0));
  assertEquals(b2,cg.getNodes().get(1));
  assertEquals(1,cg.getEdges().size());
  assertEquals(e1,cg.getEdges().get(0));
  assertEquals("Callgraph [2 function nodes, 1 edges]",cg.toString());
}
