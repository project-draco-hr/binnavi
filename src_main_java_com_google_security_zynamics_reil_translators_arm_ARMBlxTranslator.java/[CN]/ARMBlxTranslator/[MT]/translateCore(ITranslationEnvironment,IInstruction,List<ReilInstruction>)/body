{
  final String[] meta=new String[]{"isCall","true"};
  final IOperandTreeNode registerOperand1=instruction.getOperands().get(0).getRootNode().getChildren().get(0);
  final String sourceRegister1=registerOperand1.getValue();
  final OperandSize dw=OperandSize.DWORD;
  final OperandSize bt=OperandSize.BYTE;
  final String jumpOperand=environment.getNextVariableString();
  long baseOffset=ReilHelpers.nextReilAddress(instruction,instructions);
  instructions.add(ReilHelpers.createStr(baseOffset++,dw,String.valueOf(instruction.getAddress().toLong() + 0x4),dw,"LR"));
  if (registerOperand1.getType() == ExpressionType.REGISTER) {
    instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,bt,String.valueOf(1),bt,"T"));
    instructions.add(ReilHelpers.createAnd(baseOffset++,dw,sourceRegister1,dw,String.valueOf(0xFFFFFFFEL),dw,jumpOperand));
  }
 else {
    instructions.add(ReilHelpers.createStr(baseOffset++,bt,String.valueOf(1),bt,"T"));
    instructions.add(ReilHelpers.createStr(baseOffset++,dw,sourceRegister1,dw,jumpOperand));
  }
  instructions.add(ReilHelpers.createJcc(baseOffset++,bt,String.valueOf(1L),dw,jumpOperand,meta));
}
