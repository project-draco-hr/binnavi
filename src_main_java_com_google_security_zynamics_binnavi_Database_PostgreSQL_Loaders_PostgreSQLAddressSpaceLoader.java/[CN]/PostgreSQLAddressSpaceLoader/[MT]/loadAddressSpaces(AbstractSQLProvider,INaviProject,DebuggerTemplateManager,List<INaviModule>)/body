{
  checkArguments(provider,project);
  Preconditions.checkNotNull(debuggerManager,"IE01543: Debugger provider argument can not be null");
  Preconditions.checkNotNull(list,"IE01545: Modules argument can not be null");
  NaviLogger.info("Loading address spaces of project %s",project.getConfiguration().getName());
  final CConnection connection=provider.getConnection();
  final List<CAddressSpace> addressSpaces=new ArrayList<CAddressSpace>();
  final String query="SELECT id, name, description, creation_date, modification_date, debugger_id " + " FROM " + CTableNames.ADDRESS_SPACES_TABLE + " WHERE project_id = "+ project.getConfiguration().getId();
  try {
    final ResultSet resultSet=connection.executeQuery(query,true);
    try {
      while (resultSet.next()) {
        final int addressSpaceId=resultSet.getInt("id");
        final Map<INaviModule,IAddress> imageBases=loadImageBases(connection,addressSpaceId,list);
        final String name=PostgreSQLHelpers.readString(resultSet,"name");
        final String description=PostgreSQLHelpers.readString(resultSet,"description");
        final Timestamp creationDate=resultSet.getTimestamp("creation_date");
        final Timestamp modificationDate=resultSet.getTimestamp("modification_date");
        final DebuggerTemplate debuggerDescription=debuggerManager.findDebugger(resultSet.getInt("debugger_id"));
        addressSpaces.add(new CAddressSpace(addressSpaceId,name,description,creationDate,modificationDate,imageBases,debuggerDescription,provider,project));
      }
      return addressSpaces;
    }
  finally {
      resultSet.close();
    }
  }
 catch (  final SQLException e) {
    throw new CouldntLoadDataException(e);
  }
}
